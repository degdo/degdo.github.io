<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>javaweb</title>
      <link href="/2024/03/13/javaweb/"/>
      <url>/2024/03/13/javaweb/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="javaweb"><a href="#javaweb" class="headerlink" title="javaweb"></a>javaweb</h1><h2 id="1-html"><a href="#1-html" class="headerlink" title="1. html"></a>1. html</h2><h3 id="1-1-快速入门"><a href="#1-1-快速入门" class="headerlink" title="1.1 快速入门"></a>1.1 快速入门</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt; &lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>HTML语句必须在HTML文件里实现</p> <title> </title>里面定义标题，<body></body>里面定义文字</blockquote><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;html 快速入门&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        乾坤未定，你我皆是黑马~</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-2-基础标签"><a href="#1-2-基础标签" class="headerlink" title="1.2 基础标签"></a>1.2 基础标签</h3><img src="assets/image-20210811171740881.png" alt="image-20210811171740881" style="zoom:80%;" /><h4 id="1-2-1-标题标签"><a href="#1-2-1-标题标签" class="headerlink" title="1.2.1 标题标签"></a>1.2.1 标题标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;我是标题 h1&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;我是标题 h2&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;我是标题 h3&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我是标题 h4&lt;/h4&gt;</span><br><span class="line">&lt;h5&gt;我是标题 h5&lt;/h5&gt;</span><br><span class="line">&lt;h6&gt;我是标题 h6&lt;/h6&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-下划线标签"><a href="#1-2-2-下划线标签" class="headerlink" title="1.2.2 下划线标签"></a>1.2.2 下划线标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-3-字体标签"><a href="#1-2-3-字体标签" class="headerlink" title="1.2.3 字体标签"></a>1.2.3 字体标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;楷体&quot; size=&quot;5&quot; color=&quot;#ff0000&quot;&gt;传智教育&lt;/font&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-4换行标签"><a href="#1-2-4换行标签" class="headerlink" title="1.2.4换行标签"></a>1.2.4换行标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-5加粗、斜体、下划线标签"><a href="#1-2-5加粗、斜体、下划线标签" class="headerlink" title="1.2.5加粗、斜体、下划线标签"></a>1.2.5加粗、斜体、下划线标签</h4><ul><li>b：加粗标签</li><li>i：斜体标签</li><li>u：下划线标签，在文字的下方有一条横线</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;沙柳河水流淌&lt;/b&gt;&lt;br&gt;</span><br><span class="line">&lt;i&gt;沙柳河水流淌&lt;/i&gt;&lt;br&gt;</span><br><span class="line">&lt;u&gt;沙柳河水流淌&lt;/u&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-6-居中标签"><a href="#1-2-6-居中标签" class="headerlink" title="1.2.6 居中标签"></a>1.2.6 居中标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;沙柳河水流淌&lt;/center&gt;</span><br></pre></td></tr></table></figure><h4 id="1-2-7-段落标签"><a href="#1-2-7-段落标签" class="headerlink" title="1.2.7 段落标签"></a>1.2.7 段落标签</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    如果列名拼写不正确或者不存在，请修改SQL语句中的列名.</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-图片、音频、视频标签"><a href="#1-3-图片、音频、视频标签" class="headerlink" title="1.3 图片、音频、视频标签"></a>1.3 图片、音频、视频标签</h3><ul><li>相对路径：相对位置关系</li></ul><p>找页面和其他资源的相对路径。</p><blockquote><p>.&#x2F;    表示当前路径</p><p>..&#x2F;   表示上一级路径</p><p>..&#x2F;..&#x2F;   表示上两级路径</p></blockquote><h4 id="1-3-1-图片"><a href="#1-3-1-图片" class="headerlink" title="1.3.1 图片"></a>1.3.1 图片</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;a.jpg&quot; width=&quot;389&quot; height=&quot;500&quot;&gt;</span><br><span class="line">&lt;img src=&quot;a.jpg&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-2-音频"><a href="#1-3-2-音频" class="headerlink" title="1.3.2 音频"></a>1.3.2 音频</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio src=&quot;b.mp3&quot; controls=&quot;controls&quot;&gt;&lt;/audio&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-3-视频"><a href="#1-3-3-视频" class="headerlink" title="1.3.3 视频"></a>1.3.3 视频</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src=&quot;c.mp4&quot; width=&quot;500&quot; height=&quot;300&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><h3 id="1-4-超链接标签"><a href="#1-4-超链接标签" class="headerlink" title="1.4 超链接标签"></a>1.4 超链接标签</h3><ul><li>点击 点我有惊喜 跳转页面，不会开新窗口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.itcast.cn&quot; target=&quot;_self&quot;&gt;点我有惊喜&lt;/a&gt; </span><br></pre></td></tr></table></figure><ul><li>点击 点我有惊喜 跳转页面，会开新窗口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.itcast.cn&quot; target=&quot;_blank&quot;&gt;点我有惊喜&lt;/a&gt; </span><br></pre></td></tr></table></figure><h3 id="1-5-列表标签"><a href="#1-5-列表标签" class="headerlink" title="1.5 列表标签"></a>1.5 列表标签</h3><ul><li>无序表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;chinese&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;math&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>有序表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">  &lt;li&gt;chinese&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;math&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><h3 id="1-6-表格标签"><a href="#1-6-表格标签" class="headerlink" title="1.6 表格标签"></a>1.6 表格标签</h3><ul><li>border指的是线条 cellspacing让两个单元格之间的空白</li><li>align&#x3D;”center” 内容居中</li><li>几个tr就是几行</li><li>th代表的是表头元素</li><li>td表示普通元素</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; width=&quot;500&quot;&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;品牌&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">  &lt;tr align=&quot;center&quot;&gt;</span><br><span class="line">    &lt;td&gt;010&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;&lt;img src=&quot;../img/三只松鼠.png&quot; width=&quot;60&quot; height=&quot;50&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr align=&quot;center&quot;&gt;</span><br><span class="line">    &lt;td&gt;009&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;&lt;img src=&quot;../img/优衣库.png&quot; width=&quot;60&quot; height=&quot;50&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;优衣库&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;优衣库&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr align=&quot;center&quot;&gt;</span><br><span class="line">    &lt;td&gt;008&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;&lt;img src=&quot;../img/小米.png&quot; width=&quot;60&quot; height=&quot;50&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;小米&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;小米科技有限公司&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br></pre></td></tr></table></figure><h3 id="1-7-布局标签（有啥用）"><a href="#1-7-布局标签（有啥用）" class="headerlink" title="1.7 布局标签（有啥用）"></a>1.7 布局标签（有啥用）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;我是div&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;我是div&lt;/div&gt;</span><br><span class="line">    &lt;span&gt;我是span&lt;/span&gt;</span><br><span class="line">    &lt;span&gt;我是span&lt;/span&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="1-8-表单标签"><a href="#1-8-表单标签" class="headerlink" title="1.8 表单标签"></a>1.8 表单标签</h3><!--    action指定表单数据提交的url    表单数据想要提交，必须定义name属性    method有post和get两种    post:参数在http请求协议的请求体里 长度无限制    get:拼接在url后面 长度限制为4kb--><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\Desktop\image-20210812223956360.png" alt="image-20210812223956360"></p><h4 id="1-8-1-概述"><a href="#1-8-1-概述" class="headerlink" title="1.8.1 概述"></a>1.8.1 概述</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--</span><br><span class="line">      label实现了对数据的包裹，当用户点击时会突出显示</span><br><span class="line">      label标签通过for 与 id 的内容一一对应</span><br><span class="line">      必须要定义name属性，内容才会被提交</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">  &lt;label for=&quot;password&quot;&gt;密码：&lt;/label&gt;</span><br><span class="line">  &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--</span><br><span class="line">      name应保持一直，要不然单选会变成多选</span><br><span class="line">      value的值要设置，要不然都会是on</span><br><span class="line">  --&gt;</span><br><span class="line">  性别：</span><br><span class="line">  &lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;male&quot; value=&quot;1&quot;&gt;&lt;label for=&quot;male&quot;&gt;男&lt;/label&gt;</span><br><span class="line">  &lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;female&quot; value=&quot;0&quot;&gt;&lt;label for=&quot;female&quot;&gt;女&lt;/label&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line"></span><br><span class="line">  爱好：</span><br><span class="line">  &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot;&gt;崩铁</span><br><span class="line">  &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot;&gt;逆水寒</span><br><span class="line">  &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot;&gt;世界之外</span><br><span class="line">  &lt;br&gt;</span><br><span class="line"></span><br><span class="line">  头像：</span><br><span class="line">  &lt;input type=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--不是input了 是select--&gt;</span><br><span class="line">  城市：</span><br><span class="line">  &lt;select name=&quot;city&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;nanchang&quot;&gt;南昌&lt;/option&gt;</span><br><span class="line">    &lt;option&gt;苏州&lt;/option&gt;</span><br><span class="line">    &lt;option&gt;秦皇岛&lt;/option&gt;</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line"></span><br><span class="line">  个人描述：</span><br><span class="line">  &lt;textarea cols=&quot;20&quot; rows=&quot;5&quot; name=&quot;desc&quot;&gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=&quot;submit&quot; value=&quot;免费注册&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;button&quot; value=&quot;一个按钮&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-8-2-详述"><a href="#1-8-2-详述" class="headerlink" title="1.8.2 详述"></a>1.8.2 详述</h4><h5 id="1-8-2-1-用户名、密码"><a href="#1-8-2-1-用户名、密码" class="headerlink" title="1.8.2.1 用户名、密码"></a>1.8.2.1 用户名、密码</h5><!--    label实现了对数据的包裹，当用户点击时会突出显示    label标签通过for 与 id 的内容一一对应    必须要定义name属性，内容才会被提交--><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;label for=&quot;password&quot;&gt;密码：&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-2-性别-单选"><a href="#1-8-2-2-性别-单选" class="headerlink" title="1.8.2.2 性别(单选)"></a>1.8.2.2 性别(单选)</h5>  <!--      name应保持一直，要不然单选会变成多选      value的值要设置，要不然都会是on  --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">性别：</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;male&quot; value=&quot;1&quot;&gt;&lt;label for=&quot;male&quot;&gt;男&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;female&quot; value=&quot;0&quot;&gt;&lt;label for=&quot;female&quot;&gt;女&lt;/label&gt;</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-3-爱好-多选"><a href="#1-8-2-3-爱好-多选" class="headerlink" title="1.8.2.3 爱好(多选)"></a>1.8.2.3 爱好(多选)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">爱好：</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot;&gt;崩铁</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot;&gt;逆水寒</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot;&gt;世界之外</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-4-上传文件"><a href="#1-8-2-4-上传文件" class="headerlink" title="1.8.2.4 上传文件"></a>1.8.2.4 上传文件</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">头像：</span><br><span class="line">&lt;input type=&quot;file&quot;&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-5-下拉列表"><a href="#1-8-2-5-下拉列表" class="headerlink" title="1.8.2.5 下拉列表"></a>1.8.2.5 下拉列表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">城市：</span><br><span class="line">&lt;select name=&quot;city&quot;&gt;</span><br><span class="line">  &lt;option value=&quot;nanchang&quot;&gt;南昌&lt;/option&gt;</span><br><span class="line">  &lt;option&gt;苏州&lt;/option&gt;</span><br><span class="line">  &lt;option&gt;秦皇岛&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-6-文本域"><a href="#1-8-2-6-文本域" class="headerlink" title="1.8.2.6 文本域"></a>1.8.2.6 文本域</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">个人描述：</span><br><span class="line">&lt;textarea cols=&quot;20&quot; rows=&quot;5&quot; name=&quot;desc&quot;&gt;&lt;/textarea&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><h5 id="1-8-2-7-按钮"><a href="#1-8-2-7-按钮" class="headerlink" title="1.8.2.7 按钮"></a>1.8.2.7 按钮</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;submit&quot; value=&quot;免费注册&quot;&gt;</span><br><span class="line">&lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;一个按钮&quot;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>以上标签，全在<form action="#" method="post">    </form> 的包裹之下</p></blockquote><h2 id="2-CSS"><a href="#2-CSS" class="headerlink" title="2 CSS"></a>2 CSS</h2><h3 id="2-1-CSS导入方式"><a href="#2-1-CSS导入方式" class="headerlink" title="2.1 CSS导入方式"></a>2.1 CSS导入方式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--内部样式--&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    span&#123;</span><br><span class="line">    color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--外部样式--&gt;</span><br><span class="line">  &lt;link href=&quot;../../html-demo/css-work/demo.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--内联样式--&gt;</span><br><span class="line">  &lt;div style=&quot;color: red&quot;&gt;hello css&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--内部样式--&gt;</span><br><span class="line">  &lt;span&gt;hello css&lt;/span&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!--外部样式--&gt;</span><br><span class="line">  &lt;p&gt;hello css&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-CSS选择器"><a href="#2-2-CSS选择器" class="headerlink" title="2.2 CSS选择器"></a>2.2 CSS选择器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #name&#123;</span><br><span class="line">        color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .cls&#123;</span><br><span class="line">        color: pink;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--class可应用于不同类型--&gt;</span><br><span class="line">    &lt;div&gt;div1&lt;/div&gt;</span><br><span class="line">    &lt;div id=&quot;name&quot;&gt;div2&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;cls&quot;&gt;div3&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span class=&quot;cls&quot;&gt;span&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留任心得</title>
      <link href="/2024/03/04/%E7%95%99%E4%BB%BB%E5%BF%83%E5%BE%97/"/>
      <url>/2024/03/04/%E7%95%99%E4%BB%BB%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="留任心得"><a href="#留任心得" class="headerlink" title="留任心得"></a>留任心得</h1><p>– 谨以此篇，献给我短暂的留任时光</p><h2 id="关于部门"><a href="#关于部门" class="headerlink" title="关于部门"></a>关于部门</h2><p>科技部总的来说不是一个很忙的部门，前提是三位负责人要做好分工配合，不能光让一个人干。既然没有那么多工作安排，部门建设还是以部门氛围为主，我面试部长时曾许下把科技部建设成一个快乐的大家庭，现在看来，无愧初心。</p><h2 id="关于部长工作"><a href="#关于部长工作" class="headerlink" title="关于部长工作"></a>关于部长工作</h2><p>三位部长是部门的核心，要做好分工配合，能让部委干的活也要让部委干，多锻炼一下部委。</p><h2 id="关于主席团和双创"><a href="#关于主席团和双创" class="headerlink" title="关于主席团和双创"></a>关于主席团和双创</h2><p>这两个部门在名义上属于我们的上级，但是在实际上大概属于平级关系，科技部更像是一个独立的部门，对外交流不要胆怯</p><h2 id="关于证书"><a href="#关于证书" class="headerlink" title="关于证书"></a>关于证书</h2><p>把这个单独开了一个小节，我想应该能看出它的重要性，任何经手的证书都要扫描成电子版，包括三小结题证书等。</p>]]></content>
      
      
      <categories>
          
          <category> 数科技部 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 留任 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库</title>
      <link href="/2024/02/28/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2024/02/28/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>[toc]</p><h2 id="1-MySQL基础"><a href="#1-MySQL基础" class="headerlink" title="1. MySQL基础"></a>1. MySQL基础</h2><h3 id="下载安装MySQL，连接Navicat"><a href="#下载安装MySQL，连接Navicat" class="headerlink" title="下载安装MySQL，连接Navicat"></a>下载安装MySQL，连接Navicat</h3><p>进入管理员模式：C盘-&gt;Windows-&gt;System32-&gt;cmd.exe-&gt;右键</p><p>按照黑马的课一步一步来，但是要把文本文档放到bin里，如果连接出现启动后停止或2059错误则参考下面文章</p><p><a href="https://blog.csdn.net/studio_1/article/details/128136445">解决“本地计算机上的 mysql 服务启动后停止，某些服务在未由其他服务或程序使用时将自动停止”_本地计算机上的mysql服务启动后停止 某些-CSDN博客</a></p><p><a href="https://blog.csdn.net/angle_tan/article/details/105137441?ops_request_misc=&request_id=&biz_id=102&utm_term=navicat2059%E9%94%99%E8%AF%AF&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-105137441.142%5Ev99%5Epc_search_result_base2&spm=1018.2226.3001.4187">Navicat连接Mysql报2059错误的原因以及解决方法_2059 authenhication plugin-CSDN博客</a></p><p>这是很麻烦的一步，要有耐心，出了问题多找找CSDN。</p><h2 id="2-SQL语法"><a href="#2-SQL语法" class="headerlink" title="2. SQL语法"></a>2. SQL语法</h2><h3 id="2-1-DDL基本操作"><a href="#2-1-DDL基本操作" class="headerlink" title="2.1 DDL基本操作:"></a>2.1 DDL基本操作:</h3><h4 id="2-1-1-DDL操作数据库"><a href="#2-1-1-DDL操作数据库" class="headerlink" title="2.1.1 DDL操作数据库"></a>2.1.1 DDL操作数据库</h4><p>1.查询<code>show databases;</code></p><p>2.创建数据库<code>create database db1;</code>与<code>create database if not exists db1;</code></p><p>3.删除数据库<code>drop database db1;</code>与<code>drop databases if exists db1;</code></p><p>4.使用数据库<code>use db1;</code></p><p>5.查询正在使用的数据库<code>select database();</code></p><h4 id="2-1-2-DDL操作表"><a href="#2-1-2-DDL操作表" class="headerlink" title="2.1.2 DDL操作表"></a>2.1.2 DDL操作表</h4><p>6.查看表结构<code> desc student;</code></p><p>7.查询数据库下有哪些表<code>show tables;</code></p><p>8.创建表（注意要用逗号隔开）</p><p><code>create table student(     id int,     name varchar(10), #变长，最大为10     gender char(1),#定长，固定为1     birthday date, #日期就用这个     score double(5,2), #长度为5，保留两位小数     status tinyint #最后一行没有逗号 );</code></p><blockquote><p>注意：最后一行末尾，不能加逗号</p></blockquote><p>9.删除表<code>drop table student;</code>或<code>drop table if exists student;</code></p><p>10.修改表</p><p>（1）修改表名 <code> alter table student rename to stu;</code></p><p>（2）添加1列 <code>alter table stu add address varchar(50);</code></p><p>（3）修改某一列的数据类型<code>alter table stu modify address char(50);</code></p><p>（4）将某一列的数据类型和类名一起修改<code> alter table stu change address addr char(30);</code></p><p>（5）删除某列<code>alter table stu drop addr;</code></p><h3 id="2-2-DML基本操作"><a href="#2-2-DML基本操作" class="headerlink" title="2.2 DML基本操作"></a>2.2 DML基本操作</h3><p>1.查询所有数据<code>select * from stu;</code></p><p>2.给指定列添加数据<code>insert into stu(id,name)values(1,&#39;张三&#39;);</code></p><p>或<code>insert into stu values(1,&#39;张三&#39;，.....);(这种的括号里要写全)</code></p><p>或<code>insert into stu values(1,&#39;张三&#39;，.....),(  ),(    );</code></p><p>3.修改表中数据信息<code>update stu set sex= &#39;女&#39;,birthday=&#39;1999-1-1&#39; where name=&#39;张三&#39;;</code></p><p>4.删除表信息<code>delete from stu where name=&#39;张三&#39;;</code></p><h3 id="2-3-DQL基本操作"><a href="#2-3-DQL基本操作" class="headerlink" title="2.3 DQL基本操作"></a>2.3 DQL基本操作</h3><h4 id="2-3-1-信息录入"><a href="#2-3-1-信息录入" class="headerlink" title="2.3.1 信息录入"></a>2.3.1 信息录入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">create table  emp(</span><br><span class="line">    id          int                     comment &#x27;编号&#x27;,</span><br><span class="line">    workno      varchar(10)             comment &#x27;工号&#x27;,</span><br><span class="line">    name        varchar(10)             comment &#x27;姓名&#x27;,</span><br><span class="line">    gender      char                    comment &#x27;性别&#x27;,</span><br><span class="line">    age         tinyint unsigned        comment &#x27;年龄&#x27;,</span><br><span class="line">    idcard      char(18)                comment &#x27;身份证号&#x27;,</span><br><span class="line">    workadderss varchar(50)             comment &#x27;工作地址&#x27;,</span><br><span class="line">    entrydate   date                    comment &#x27;入职时间&#x27;</span><br><span class="line">)comment &#x27;员工表&#x27;;</span><br><span class="line">insert into emp(id,workno,name,gender,age,idcard,workadderss,entrydate)</span><br><span class="line">values (1,&#x27;1&#x27;,&#x27;柳岩&#x27;,&#x27;女&#x27;,20,&#x27;340827200108220000&#x27;,&#x27;北京&#x27;,&#x27;2000-01-01&#x27;),</span><br><span class="line">       (2,&#x27;2&#x27;,&#x27;张无忌&#x27;,&#x27;男&#x27;,18,&#x27;340827200108220001&#x27;,&#x27;北京&#x27;,&#x27;2005-09-01&#x27;),</span><br><span class="line">       (3,&#x27;3&#x27;,&#x27;韦一笑&#x27;,&#x27;男&#x27;,38,&#x27;340827200108220002&#x27;,&#x27;上海&#x27;,&#x27;2005-08-01&#x27;),</span><br><span class="line">       (4,&#x27;4&#x27;,&#x27;赵敏&#x27;,&#x27;女&#x27;,18,&#x27;340827200108220003&#x27;,&#x27;北京&#x27;,&#x27;2009-12-01&#x27;),</span><br><span class="line">       (5,&#x27;5&#x27;,&#x27;小昭&#x27;,&#x27;女&#x27;,16,&#x27;340827200108220004&#x27;,&#x27;上海&#x27;,&#x27;2007-07-01&#x27;),</span><br><span class="line">       (6,&#x27;6&#x27;,&#x27;杨逍&#x27;,&#x27;男&#x27;,28,&#x27;340827200108220005&#x27;,&#x27;北京&#x27;,&#x27;2006-01-01&#x27;),</span><br><span class="line">       (7,&#x27;7&#x27;,&#x27;范瑶&#x27;,&#x27;男&#x27;,40,&#x27;340827200108220006&#x27;,&#x27;北京&#x27;,&#x27;2005-05-01&#x27;),</span><br><span class="line">       (8,&#x27;8&#x27;,&#x27;黛绮丝&#x27;,&#x27;女&#x27;,38,&#x27;340827200108220007&#x27;,&#x27;天津&#x27;,&#x27;2015-05-01&#x27;),</span><br><span class="line">       (9,&#x27;9&#x27;,&#x27;范凉凉&#x27;,&#x27;女&#x27;,45,&#x27;340827200108220008&#x27;,&#x27;北京&#x27;,&#x27;2010-04-01&#x27;),</span><br><span class="line">       (10,&#x27;10&#x27;,&#x27;陈友谅&#x27;,&#x27;男&#x27;,53,&#x27;340827200108220009&#x27;,&#x27;上海&#x27;,&#x27;2011-01-01&#x27;),</span><br><span class="line">       (11,&#x27;11&#x27;,&#x27;张士诚&#x27;,&#x27;男&#x27;,55,&#x27;340827200108220010&#x27;,&#x27;江苏&#x27;,&#x27;2015-05-01&#x27;),</span><br><span class="line">       (12,&#x27;12&#x27;,&#x27;常遇春&#x27;,&#x27;男&#x27;,32,&#x27;340827200108220011&#x27;,&#x27;北京&#x27;,&#x27;2004-02-01&#x27;),</span><br><span class="line">       (13,&#x27;13&#x27;,&#x27;张三丰&#x27;,&#x27;男&#x27;,88,&#x27;340827200108220012&#x27;,&#x27;江苏&#x27;,&#x27;2020-11-01&#x27;),</span><br><span class="line">       (14,&#x27;14&#x27;,&#x27;灭绝&#x27;,&#x27;女&#x27;,65,&#x27;340827200108220013&#x27;,&#x27;西安&#x27;,&#x27;2019-05-01&#x27;),</span><br><span class="line">       (15,&#x27;15&#x27;,&#x27;胡青牛&#x27;,&#x27;男&#x27;,70,&#x27;340827200108220014&#x27;,&#x27;西安&#x27;,&#x27;2018-04-01&#x27;),</span><br><span class="line">       (16,&#x27;16&#x27;,&#x27;周芷若&#x27;,&#x27;女&#x27;,18,null,&#x27;北京&#x27;,&#x27;2012-06-01&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-2-基础查询"><a href="#2-3-2-基础查询" class="headerlink" title="2.3.2 基础查询"></a>2.3.2 基础查询</h4><p>1.查询所有列<code>select * from emp;</code></p><p>2.查询某列<code>select id,name from emp;</code></p><p>3.查询某列并去重<code>select distinct workadderss from emp;</code></p><p>4.查询并起别名<code>select (distinct) id as 序号,name as 名字 from emp;</code>（不用加引号，as可以省略）</p><h4 id="2-3-3-条件查询"><a href="#2-3-3-条件查询" class="headerlink" title="2.3.3 条件查询"></a>2.3.3 条件查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">select * from emp;</span><br><span class="line"></span><br><span class="line"># 查询年龄等于 88 的员工</span><br><span class="line">select * from emp where age = 88;</span><br><span class="line"></span><br><span class="line"># 查询年龄等于 86 87 88 的员工</span><br><span class="line">select * from emp where age = 86 or age = 87 or age = 88;</span><br><span class="line">select * from emp where age in (86,87,88);</span><br><span class="line"></span><br><span class="line"># 查询年龄小于 20 的员工信息</span><br><span class="line">select * from emp where age &lt; 20;</span><br><span class="line"></span><br><span class="line"># 查询年龄小于等于 20 的员工信息</span><br><span class="line">select * from emp where age &lt;= 20;</span><br><span class="line"></span><br><span class="line"># 查询没有身份证号的员工信息</span><br><span class="line">select * from emp where idcard is null;</span><br><span class="line"></span><br><span class="line"># 查询有身份证号的员工信息</span><br><span class="line">select * from emp where idcard is not null;</span><br><span class="line"></span><br><span class="line"># 查询年龄不等于 88 的员工信息</span><br><span class="line">select * from emp where age != 88;</span><br><span class="line">select * from emp where age &lt;&gt; 88;</span><br><span class="line"></span><br><span class="line"># 查询年龄在 15岁到 20岁之间得员工信息，若是字符则加引号</span><br><span class="line">select * from emp where age &gt;= 15 and age &lt;= 20;</span><br><span class="line">select * from emp where age &gt;= 15 &amp;&amp; age &lt;= 20;</span><br><span class="line"></span><br><span class="line">select * from emp where age between 15 and 20;</span><br><span class="line"></span><br><span class="line"># 查询性别为 女 且年龄小于 25岁 的员工信息</span><br><span class="line">select * from emp where age &lt; 25 and gender = &#x27;女&#x27;;</span><br><span class="line"></span><br><span class="line"># 查询年龄等于 18 或 20 或 40 的员工信息</span><br><span class="line">select * from emp where age = 18 or age = 20 or age = 40;</span><br><span class="line">select * from emp where age = 18 || age = 20 || age = 40;</span><br><span class="line">select * from emp where age in (18,20,40);</span><br><span class="line"></span><br><span class="line"># 查询姓名为两个字的员工信息</span><br><span class="line">select * from emp where name like &#x27;__&#x27;;</span><br><span class="line"># 查询姓名为三个字的员工信息</span><br><span class="line">select * from emp where name like &#x27;___&#x27;;</span><br><span class="line"></span><br><span class="line"># 查询姓赵的员工信息 %代指多个字符_代指单个字符</span><br><span class="line">select * from emp where name like &#x27;赵%&#x27;;</span><br><span class="line"></span><br><span class="line"># 查询名字第二个字是友的员工信息</span><br><span class="line">select * from emp where name like &#x27;_友%&#x27;;</span><br><span class="line"></span><br><span class="line"># 查询名字包含友的员工信息</span><br><span class="line">select * from emp where name like &#x27;%友%&#x27;;</span><br></pre></td></tr></table></figure><h4 id="2-3-4-排序查询"><a href="#2-3-4-排序查询" class="headerlink" title="2.3.4 排序查询"></a>2.3.4 排序查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 根据年龄对公司的员工进行升序排序</span><br><span class="line">select * from emp order by age asc;</span><br><span class="line">select * from emp order by age;     # 默认排序为升序排序</span><br><span class="line"></span><br><span class="line"># 根据入职时间，对员工进行降序排序</span><br><span class="line">select * from emp order by entrydate desc;</span><br><span class="line"></span><br><span class="line"># 根据年龄对公司的员工进行升序排列，年龄相同，在按照入职时间进行降序排序</span><br><span class="line">select * from emp order by age asc, entrydate desc;</span><br><span class="line">select * from emp order by age, entrydate desc;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-5-聚合函数"><a href="#2-3-5-聚合函数" class="headerlink" title="2.3.5 聚合函数"></a>2.3.5 聚合函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#统计员工数目</span><br><span class="line">select count(id) from emp;</span><br><span class="line"></span><br><span class="line">#查询年龄最大值</span><br><span class="line">select max(age) from emp;</span><br><span class="line"></span><br><span class="line">#查询年龄最小值</span><br><span class="line">select min(age) from emp;</span><br><span class="line"></span><br><span class="line">#查询年龄平均值</span><br><span class="line">select avg(age) from emp;</span><br><span class="line"></span><br><span class="line">#查询年龄总值 </span><br><span class="line">select sum(age) from emp;</span><br></pre></td></tr></table></figure><h4 id="2-3-6-分组查询"><a href="#2-3-6-分组查询" class="headerlink" title="2.3.6 分组查询"></a>2.3.6 分组查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 根据性别分组，统计男性员工和女性员工的数量</span><br><span class="line">select gender,count(*) from emp group by gender;</span><br><span class="line"></span><br><span class="line"># 根据性别分组，统计男性员工和女性员工的平均年龄以及各自人数</span><br><span class="line">select gender,avg(age),count(*) from emp group by gender;</span><br><span class="line"></span><br><span class="line"># 查询年龄小于45的员工，并根据工作地址分组，获取员工数量大于等于3的工作地址</span><br><span class="line">select workadderss ,count(*) from emp where age &lt; 45 group by workadderss having count(*) &gt; 3;</span><br></pre></td></tr></table></figure><p><strong>where 和 having 区别：</strong></p><ul><li><p>执行时机不一样：where 是分组之前进行限定，不满足where条件，则不参与分组，而having是分组之后对结果进行过滤。</p></li><li><p>可判断的条件不一样：where 不能对聚合函数进行判断，having 可以。</p></li></ul><h4 id="2-3-7-分页查询"><a href="#2-3-7-分页查询" class="headerlink" title="2.3.7 分页查询"></a>2.3.7 分页查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 分页查询</span><br><span class="line"># 查询第1页员工数据，每页展示10条记录</span><br><span class="line">select * from emp limit 0,10;</span><br><span class="line"></span><br><span class="line"># 查询第2页员工数据，每页展示10条记录 ------&gt;（页码 - 1）* 页展示记录数</span><br><span class="line">select * from emp limit 10, 10;</span><br></pre></td></tr></table></figure><h2 id="3-数据的约束"><a href="#3-数据的约束" class="headerlink" title="3. 数据的约束"></a>3. 数据的约束</h2><h3 id="3-1-普通约束"><a href="#3-1-普通约束" class="headerlink" title="3.1 普通约束"></a>3.1 普通约束</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table  emp2(</span><br><span class="line">    id          int primary key auto_increment  comment &#x27;编号&#x27;,#主键且自增长</span><br><span class="line">    name        varchar(10) not null unique     comment &#x27;姓名&#x27;,#非空并唯一</span><br><span class="line">    gender      int default 0                   comment &#x27;性别&#x27;,#非空，默认为0</span><br><span class="line">    workadderss varchar(50) not null            comment &#x27;工作地址&#x27;,#非空</span><br><span class="line">    entrydate   date not null                   comment &#x27;入职时间&#x27;#非空</span><br><span class="line">)comment &#x27;员工表&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>本来还有check关键字，但是不知道为什么无法生效</p></blockquote><h3 id="3-2-外键约束"><a href="#3-2-外键约束" class="headerlink" title="3.2 外键约束"></a>3.2 外键约束</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">-- 创建主表（班级表）</span><br><span class="line">create table class_table(</span><br><span class="line">c_id int(4) primary key auto_increment,</span><br><span class="line">c_name varchar(10)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建从表（学生表）</span><br><span class="line">create table stu_table(</span><br><span class="line">s_id int PRIMARY key auto_increment,</span><br><span class="line">s_name varchar(10) not null,</span><br><span class="line">s_sex char(1) check(s_sex = &#x27;男&#x27; or s_sex = &#x27;女&#x27;),</span><br><span class="line">s_age int(3) check(s_age &gt; 0 and s_age &lt; 100),</span><br><span class="line">c_id int(4) </span><br><span class="line"></span><br><span class="line">-- 创建时添加表级外键约束,不用加什么符号，前从后主</span><br><span class="line">constraint fk_c_id  foreign key (c_id) references class_table (c_id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 班级表添加数据</span><br><span class="line">insert into class_table values(NULL, &#x27;xg1901&#x27;), (NULL, &#x27;xg1902&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查看班级表数据</span><br><span class="line">select * from class_table;</span><br><span class="line"></span><br><span class="line">-- 学生表中插入数据</span><br><span class="line">insert into stu_table values (NULL, &#x27;香菱&#x27;, &#x27;女&#x27;, 18, 1);</span><br><span class="line">insert into stu_table values (NULL, &#x27;行秋&#x27;, &#x27;男&#x27;, 18, 2);</span><br><span class="line">insert into stu_table values (NULL, &#x27;胡桃&#x27;, &#x27;女&#x27;, 16, 2);</span><br><span class="line">insert into stu_table values (NULL, &#x27;班尼特&#x27;, &#x27;男&#x27;, 18, 1);</span><br><span class="line">-- 查看学生表数据</span><br><span class="line">select * from stu_table;</span><br><span class="line"></span><br><span class="line">-- 已存在的表添加表级外键约束</span><br><span class="line">alter table stu_table add constraint fk_c_id  foreign key (c_id) references class_table (c_id);</span><br><span class="line">-- 删除外键</span><br><span class="line">alter table stu_table drop foreign key fk_c_id;</span><br></pre></td></tr></table></figure><h2 id="4-数据库设计"><a href="#4-数据库设计" class="headerlink" title="4. 数据库设计"></a>4. 数据库设计</h2><p>根据表关系进行设计</p><p>一对多：建立外键</p><p>多对多：建立第三张中间表，至少包含两个主键</p><p>一对一：</p><h2 id="5-多表查询"><a href="#5-多表查询" class="headerlink" title="5. 多表查询"></a>5. 多表查询</h2><h3 id="5-1-导入表信息"><a href="#5-1-导入表信息" class="headerlink" title="5.1 导入表信息"></a>5.1 导入表信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">-- 创建主表（班级表）</span><br><span class="line">create table class_table(</span><br><span class="line">class_id int(4) primary key auto_increment,</span><br><span class="line">class_name varchar(10)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 创建从表（学生表）</span><br><span class="line">create table stu_table(</span><br><span class="line">id int PRIMARY key auto_increment,</span><br><span class="line">name varchar(10) not null,</span><br><span class="line">sex char(1) ,</span><br><span class="line">age int(3),</span><br><span class="line">class_id int(4) </span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 班级表添加数据</span><br><span class="line">insert into class_table values(NULL, &#x27;222016&#x27;), (NULL, &#x27;222017&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查看班级表数据</span><br><span class="line">select * from class_table;</span><br><span class="line"></span><br><span class="line">-- 学生表中插入数据</span><br><span class="line">insert into stu_table values (NULL, &#x27;香菱&#x27;, &#x27;女&#x27;, 18, 1);</span><br><span class="line">insert into stu_table values (NULL, &#x27;行秋&#x27;, &#x27;男&#x27;, 18, 2);</span><br><span class="line">insert into stu_table values (NULL, &#x27;胡桃&#x27;, &#x27;女&#x27;, 16, 2);</span><br><span class="line">insert into stu_table values (NULL, &#x27;班尼特&#x27;, &#x27;男&#x27;, 18, 1);</span><br><span class="line">-- 查看学生表数据</span><br><span class="line">select * from stu_table;</span><br><span class="line"></span><br><span class="line">-- 已存在的表添加表级外键约束</span><br><span class="line">alter table stu_table add constraint fk_c_id  foreign key (class_id) references class_table (class_id);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-2-内连接"><a href="#5-2-内连接" class="headerlink" title="5.2 内连接"></a>5.2 内连接</h3><h4 id="5-2-1-隐式内连接"><a href="#5-2-1-隐式内连接" class="headerlink" title="5.2.1 隐式内连接"></a>5.2.1 隐式内连接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#加入限定条件的查询，连接查询（隐式内连接），查询两表交集部分，a∩b,假如没有交集，表的数据则不会被表示</span><br><span class="line">select * from class_table,stu_table where class_table.class_id = stu_table.class_id;</span><br><span class="line"></span><br><span class="line">#查询部分内容</span><br><span class="line">select class_table.class_name,stu_table.name,stu_table.sex,stu_table.age from class_table,stu_table where class_table.class_id = stu_table.class_id;</span><br><span class="line"></span><br><span class="line">#给表起别名</span><br><span class="line">select t1.class_name,t2.name,t2.sex,t2.age from class_table t1,stu_table t2 where t1.class_id = t2.class_id;</span><br></pre></td></tr></table></figure><h4 id="5-2-2-显式内连接"><a href="#5-2-2-显式内连接" class="headerlink" title="5.2.2 显式内连接"></a>5.2.2 显式内连接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#显式内连接</span><br><span class="line">select * from class_table inner join stu_table on class_table.class_id = stu_table.class_id;</span><br></pre></td></tr></table></figure><h3 id="5-3-外连接"><a href="#5-3-外连接" class="headerlink" title="5.3 外连接"></a>5.3 外连接</h3><h4 id="5-3-1-左外连接"><a href="#5-3-1-左外连接" class="headerlink" title="5.3.1 左外连接"></a>5.3.1 左外连接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#左外连接 a+a∩b</span><br><span class="line">select * from class_table left join stu_table on class_table.class_id = stu_table.class_id;</span><br></pre></td></tr></table></figure><h4 id="5-3-2-右外连接"><a href="#5-3-2-右外连接" class="headerlink" title="5.3.2 右外连接"></a>5.3.2 右外连接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#右外连接 b+a∩b</span><br><span class="line">select * from class_table right join stu_table on class_table.class_id = stu_table.class_id;</span><br></pre></td></tr></table></figure><h3 id="5-4-子查询"><a href="#5-4-子查询" class="headerlink" title="5.4 子查询"></a>5.4 子查询</h3><h4 id="5-4-1-单行单列子查询"><a href="#5-4-1-单行单列子查询" class="headerlink" title="5.4.1 单行单列子查询"></a>5.4.1 单行单列子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查询年龄大于赵敏的员工信息</span><br><span class="line">select age from emp where name = &#x27;赵敏&#x27;;</span><br><span class="line">select * from emp where age &gt; 18;</span><br><span class="line">#或者 这个叫单行单列子查询</span><br><span class="line">select * from emp where age &gt; (select age from emp where name = &#x27;赵敏&#x27;);</span><br></pre></td></tr></table></figure><h4 id="5-4-2-多行单列子查询"><a href="#5-4-2-多行单列子查询" class="headerlink" title="5.4.2 多行单列子查询"></a>5.4.2 多行单列子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#多行单列子查询 查询在上海和江苏工作的(也可用于多表)</span><br><span class="line">select * from emp where workadderss in (select workadderss from emp where workadderss = &#x27;上海&#x27; or workadderss = &#x27;江苏&#x27;);</span><br></pre></td></tr></table></figure><h4 id="5-4-3-多行多列子查询"><a href="#5-4-3-多行多列子查询" class="headerlink" title="5.4.3 多行多列子查询"></a>5.4.3 多行多列子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#多行多列子查询 ???啊 为什么可以成功 t1和a都是必须要有的别名</span><br><span class="line">select * from (select * from emp where entrydate &gt; &#x27;2007-01-01&#x27;) t1 where workadderss in (select workadderss from emp where workadderss = &#x27;上海&#x27; or workadderss = &#x27;江苏&#x27;););</span><br><span class="line"></span><br><span class="line">select * from (select * from emp where entrydate &gt; &#x27;2007-01-01&#x27;) a where workadderss in (select workadderss from emp where workadderss = &#x27;上海&#x27; or workadderss = &#x27;江苏&#x27;);</span><br></pre></td></tr></table></figure><h4 id="5-5-查询案例-未完成"><a href="#5-5-查询案例-未完成" class="headerlink" title="5.5 查询案例(未完成)"></a>5.5 查询案例(未完成)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">-- 如果表存在就删除</span><br><span class="line">DROP TABLE IF EXISTS emp;</span><br><span class="line">DROP TABLE IF EXISTS dept;</span><br><span class="line">DROP TABLE IF EXISTS job;</span><br><span class="line">DROP TABLE IF EXISTS salarygrade;</span><br><span class="line"></span><br><span class="line">-- 部门表</span><br><span class="line">CREATE TABLE dept (</span><br><span class="line">  did INT PRIMARY KEY PRIMARY KEY, -- 部门id</span><br><span class="line">  dname VARCHAR(50), -- 部门名称</span><br><span class="line">  loc VARCHAR(50) -- 部门所在地</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 职务表，职务名称，职务描述</span><br><span class="line">CREATE TABLE job (</span><br><span class="line">  id INT PRIMARY KEY,</span><br><span class="line">  jname VARCHAR(20),</span><br><span class="line">  description VARCHAR(50)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">  id INT PRIMARY KEY, -- 员工id</span><br><span class="line">  ename VARCHAR(50), -- 员工姓名</span><br><span class="line">  job_id INT, -- 职务id</span><br><span class="line">  mgr INT , -- 上级领导</span><br><span class="line">  joindate DATE, -- 入职日期</span><br><span class="line">  salary DECIMAL(7,2), -- 工资</span><br><span class="line">  bonus DECIMAL(7,2), -- 奖金</span><br><span class="line">  dept_id INT -- 所在部门编号</span><br><span class="line">   -- CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),</span><br><span class="line">  -- CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 已存在的表添加表级外键约束</span><br><span class="line">alter table emp add constraint emp_jobid_ref_job_id_fk  foreign key (job_id) references job (id);</span><br><span class="line">alter table emp add constraint emp_deptid_ref_dept_id_fk  foreign key (dept_id) references dept (did);</span><br><span class="line"></span><br><span class="line">-- 工资等级表</span><br><span class="line">CREATE TABLE salarygrade (</span><br><span class="line">  grade INT PRIMARY KEY,   -- 级别</span><br><span class="line">  losalary INT,  -- 最低工资</span><br><span class="line">  hisalary INT -- 最高工资</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 添加4个部门</span><br><span class="line">INSERT INTO dept(did,dname,loc) VALUES </span><br><span class="line">(10,&#x27;教研部&#x27;,&#x27;北京&#x27;),</span><br><span class="line">(20,&#x27;学工部&#x27;,&#x27;上海&#x27;),</span><br><span class="line">(30,&#x27;销售部&#x27;,&#x27;广州&#x27;),</span><br><span class="line">(40,&#x27;财务部&#x27;,&#x27;深圳&#x27;);</span><br><span class="line"></span><br><span class="line">-- 添加4个职务</span><br><span class="line">INSERT INTO job (id, jname, description) VALUES</span><br><span class="line">(1, &#x27;董事长&#x27;, &#x27;管理整个公司，接单&#x27;),</span><br><span class="line">(2, &#x27;经理&#x27;, &#x27;管理部门员工&#x27;),</span><br><span class="line">(3, &#x27;销售员&#x27;, &#x27;向客人推销产品&#x27;),</span><br><span class="line">(4, &#x27;文员&#x27;, &#x27;使用办公软件&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 添加员工</span><br><span class="line">INSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES </span><br><span class="line">(1001,&#x27;孙悟空&#x27;,4,1004,&#x27;2000-12-17&#x27;,&#x27;8000.00&#x27;,NULL,20),</span><br><span class="line">(1002,&#x27;卢俊义&#x27;,3,1006,&#x27;2001-02-20&#x27;,&#x27;16000.00&#x27;,&#x27;3000.00&#x27;,30),</span><br><span class="line">(1003,&#x27;林冲&#x27;,3,1006,&#x27;2001-02-22&#x27;,&#x27;12500.00&#x27;,&#x27;5000.00&#x27;,30),</span><br><span class="line">(1004,&#x27;唐僧&#x27;,2,1009,&#x27;2001-04-02&#x27;,&#x27;29750.00&#x27;,NULL,20),</span><br><span class="line">(1005,&#x27;李逵&#x27;,4,1006,&#x27;2001-09-28&#x27;,&#x27;12500.00&#x27;,&#x27;14000.00&#x27;,30),</span><br><span class="line">(1006,&#x27;宋江&#x27;,2,1009,&#x27;2001-05-01&#x27;,&#x27;28500.00&#x27;,NULL,30),</span><br><span class="line">(1007,&#x27;刘备&#x27;,2,1009,&#x27;2001-09-01&#x27;,&#x27;24500.00&#x27;,NULL,10),</span><br><span class="line">(1008,&#x27;猪八戒&#x27;,4,1004,&#x27;2007-04-19&#x27;,&#x27;30000.00&#x27;,NULL,20),</span><br><span class="line">(1009,&#x27;罗贯中&#x27;,1,NULL,&#x27;2001-11-17&#x27;,&#x27;50000.00&#x27;,NULL,10),</span><br><span class="line">(1010,&#x27;吴用&#x27;,3,1006,&#x27;2001-09-08&#x27;,&#x27;15000.00&#x27;,&#x27;0.00&#x27;,30),</span><br><span class="line">(1011,&#x27;沙僧&#x27;,4,1004,&#x27;2007-05-23&#x27;,&#x27;11000.00&#x27;,NULL,20),</span><br><span class="line">(1012,&#x27;李逵&#x27;,4,1006,&#x27;2001-12-03&#x27;,&#x27;9500.00&#x27;,NULL,30),</span><br><span class="line">(1013,&#x27;小白龙&#x27;,4,1004,&#x27;2001-12-03&#x27;,&#x27;30000.00&#x27;,NULL,20),</span><br><span class="line">(1014,&#x27;关羽&#x27;,4,1007,&#x27;2002-01-23&#x27;,&#x27;13000.00&#x27;,NULL,10);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 添加5个工资等级</span><br><span class="line">INSERT INTO salarygrade(grade,losalary,hisalary) VALUES </span><br><span class="line">(1,7000,12000),</span><br><span class="line">(2,12010,14000),</span><br><span class="line">(3,14010,20000),</span><br><span class="line">(4,20010,30000),</span><br><span class="line">(5,30010,99990);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</span><br><span class="line">/*</span><br><span class="line">员工编号，员工姓名，工资在emp表中，职务名称，职务描述在job表中</span><br><span class="line">一对多的关系</span><br><span class="line">*/</span><br><span class="line">select * from emp, job where emp.job_id = job.id;</span><br><span class="line">select * from emp;</span><br><span class="line">-- 2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</span><br><span class="line"></span><br><span class="line">-- 3.查询员工姓名，工资，工资等级</span><br><span class="line"></span><br><span class="line">-- 4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span><br><span class="line"></span><br><span class="line">-- 5.查询出部门编号、部门名称、部门位置、部门人数</span><br></pre></td></tr></table></figure><h2 id="6-事务"><a href="#6-事务" class="headerlink" title="6. 事务"></a>6. 事务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS account;</span><br><span class="line"></span><br><span class="line">-- 创建账户表</span><br><span class="line">CREATE TABLE account(</span><br><span class="line">id int PRIMARY KEY auto_increment,</span><br><span class="line">name varchar(10),</span><br><span class="line">money double(10,2)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 添加数据</span><br><span class="line">INSERT INTO account(name,money) values(&#x27;张三&#x27;,1000),(&#x27;李四&#x27;,1000);</span><br></pre></td></tr></table></figure><h3 id="6-1-不加事务演示"><a href="#6-1-不加事务演示" class="headerlink" title="6.1 不加事务演示"></a>6.1 不加事务演示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 转账操作</span><br><span class="line">-- 1. 查询李四账户金额是否大于500</span><br><span class="line"></span><br><span class="line">-- 2. 李四账户 -500</span><br><span class="line">UPDATE account set money = money - 500 where name = &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">出现异常了...  -- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span><br><span class="line">-- 3. 张三账户 +500</span><br><span class="line">UPDATE account set money = money + 500 where name = &#x27;张三&#x27;;</span><br></pre></td></tr></table></figure><p>整体执行结果肯定会出问题，我们查询账户表中数据，发现李四账户少了500，但是张三账户并没有多500。</p><h3 id="6-2-添加事务"><a href="#6-2-添加事务" class="headerlink" title="6.2 添加事务"></a>6.2 添加事务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 开启事务</span><br><span class="line">BEGIN;</span><br><span class="line">-- 转账操作</span><br><span class="line">-- 1. 查询李四账户金额是否大于500</span><br><span class="line"></span><br><span class="line">-- 2. 李四账户 -500</span><br><span class="line">UPDATE account set money = money - 500 where name = &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">出现异常了...  -- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span><br><span class="line">-- 3. 张三账户 +500</span><br><span class="line">UPDATE account set money = money + 500 where name = &#x27;张三&#x27;;</span><br><span class="line"></span><br><span class="line">-- 提交事务</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br><span class="line">-- 回滚事务</span><br><span class="line">ROLLBACK;</span><br></pre></td></tr></table></figure><h2 id="7-JDBC"><a href="#7-JDBC" class="headerlink" title="7. JDBC"></a>7. JDBC</h2><p>用java语言操作数据库的API</p><blockquote><p>详情请见idea项目 <code>D:\op_sql\untitled1</code></p></blockquote><h2 id="8-Maven"><a href="#8-Maven" class="headerlink" title="8. Maven"></a>8. Maven</h2><p>管理和构建java项目</p><p>在配置Maven环境变量时，在path里面要把Maven那一行移动到最上面</p><p>在idea创建Maven项目请看下面文章</p><p><a href="https://blog.csdn.net/m0_52861000/article/details/127944761?ops_request_misc=%7B%22request_id%22:%22170977352116800184185306%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=170977352116800184185306&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-127944761-null-null.142%5Ev99%5Epc_search_result_base2&utm_term=idea%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE&spm=1018.2226.3001.4187">IDEA快速创建maven项目详细步骤_idea新建maven项目步骤-CSDN博客</a></p><h2 id="9-Mybatis"><a href="#9-Mybatis" class="headerlink" title="9. Mybatis"></a>9. Mybatis</h2>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++基础</title>
      <link href="/2024/02/28/c++%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/02/28/c++%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="一、-c-基础"><a href="#一、-c-基础" class="headerlink" title="一、 c++基础"></a>一、 c++基础</h1><h3 id="1-头文件模板"><a href="#1-头文件模板" class="headerlink" title="1.头文件模板"></a>1.头文件模板</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;//输入输出流 input output stream</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;unordered_set&gt;</span><br><span class="line">#include&lt;map&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include &lt;bitset&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;//把.h改成c,并放到最前面</span><br><span class="line">#include&lt;cctype&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;//名称空间</span><br></pre></td></tr></table></figure><h3 id="2-字符串"><a href="#2-字符串" class="headerlink" title="2.字符串"></a>2.字符串</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cout&lt;&lt;&quot;Hello, World!&quot;&lt;&lt;++n&lt;&lt;endl;//endl换行符，也可以写成&quot;\n&quot;</span><br><span class="line">string s1=&quot;hello &quot;;</span><br><span class="line">string s2=&quot;world&quot;;</span><br><span class="line">cout&lt;&lt;s1+s2&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">string s_sub=s.substr(0,2);</span><br><span class="line">string s_sub2=s.substr(2);</span><br><span class="line">getline(cin,s);</span><br><span class="line">cout&lt;&lt;s.length()&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h3 id="3-字符"><a href="#3-字符" class="headerlink" title="3.字符"></a>3.字符</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">char c=&#x27;A&#x27;;</span><br><span class="line">cout&lt;&lt;isalpha(c)&lt;&lt;endl;//是否是字母</span><br><span class="line">cout&lt;&lt;islower(c)&lt;&lt;endl;//是否是小写字母</span><br><span class="line">cout&lt;&lt;isupper(c)&lt;&lt;endl;//是否是大写字母</span><br><span class="line">cout&lt;&lt;isalnum(c)&lt;&lt;endl;//是否是字母或数字</span><br><span class="line">cout&lt;&lt;isspace(c)&lt;&lt;endl;//是否是\t \r \n</span><br><span class="line">cout&lt;&lt;tolower(c)&lt;&lt;endl;//转化为小写字母</span><br><span class="line">cout&lt;&lt;toupper(c)&lt;&lt;endl;//转化为大写字母</span><br><span class="line">cout&lt;&lt;to_string(111)&lt;&lt;endl;//数字转字符串</span><br><span class="line">cout&lt;&lt;stoi(&quot;111&quot;)&lt;&lt;endl;//转化为int</span><br><span class="line">cout&lt;&lt;stod(&quot;111.1&quot;)&lt;&lt;endl;//转化为double</span><br></pre></td></tr></table></figure><h3 id="4-向量"><a href="#4-向量" class="headerlink" title="4.向量"></a>4.向量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;int&gt; v;</span><br><span class="line">v.resize(10);//长度为10，值为0</span><br><span class="line">for(int i=0;i&lt;10;i++)&#123;</span><br><span class="line">    v[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">v.push_back(11);</span><br><span class="line">vector&lt;int&gt; v1(10,2);//初始化为2</span><br><span class="line">vector&lt;int&gt; v2(10);//初始化为0</span><br></pre></td></tr></table></figure><h3 id="5-set"><a href="#5-set" class="headerlink" title="5.set"></a>5.set</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//set自动排序</span><br><span class="line">set&lt;int&gt; a;//不能赋值</span><br><span class="line">unordered_set&lt;int&gt; a2;//无序的，map同理</span><br><span class="line">a.insert(1);</span><br><span class="line">for(auto p=a.begin();p!=a.end();p++)&#123;</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">for(int p : a)&#123;</span><br><span class="line">    cout&lt;&lt;p&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;(a.find(2) != a.end())&lt;&lt;&quot; &quot;;//找2这个元素  找到返回1，找不到返回0</span><br><span class="line">a.erase(1);//删除1</span><br></pre></td></tr></table></figure><h3 id="6-map"><a href="#6-map" class="headerlink" title="6.map"></a>6.map</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">map&lt;string,int&gt; b;//按键从小到大排序</span><br><span class="line">b[&quot;hello&quot;]=2;</span><br><span class="line">cout&lt;&lt;b[&quot;hello&quot;]&lt;&lt;&quot; &quot;;</span><br><span class="line">for(auto &amp; p : b)&#123;</span><br><span class="line">    cout&lt;&lt;p.first&lt;&lt;p.second&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;b.size()&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h3 id="7-排序"><a href="#7-排序" class="headerlink" title="7.排序"></a>7.排序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sort(v.begin(),v.end());//从小到大排序 end是最后一个元素的下一个地址</span><br><span class="line">sort(v.begin(),v.end(),cmp);</span><br></pre></td></tr></table></figure><h3 id="8-进制转换"><a href="#8-进制转换" class="headerlink" title="8.进制转换"></a>8.进制转换</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bitset&lt;5&gt; bitset(19);//5位表示十进制19</span><br><span class="line">bitset&lt;5&gt; bitset(&quot;11&quot;);//00011</span><br><span class="line">bitset&lt;5&gt; bitset(s,0,5);//取元素</span><br><span class="line">cout&lt;&lt;bitset.any()&lt;&lt;endl;//是否有1</span><br><span class="line">cout&lt;&lt;bitset.none()&lt;&lt;endl;//是否不存在1</span><br><span class="line">cout&lt;&lt;bitset.test(0)&lt;&lt;endl;//第0位是不是1（第0位是低位往高位看的）</span><br><span class="line">bitset.flip();//全部取反；</span><br><span class="line">bitset.flip(1);//第一位取反</span><br><span class="line">bitset.reset();//全部归零；</span><br><span class="line">bitset.reset(1);//第一位归零</span><br><span class="line">unsigned long a10=bitset.to_ulong();//二进制转10进制</span><br></pre></td></tr></table></figure><p>int 2*e9</p><p>先根据数据范围判断时间复杂度，再判断是什么算法</p><p>输入范围小于e5用cin cout，若大于用scanf printf 后者速度更快</p><table><thead><tr><th align="center">知识点</th><th align="center">出现次数</th></tr></thead><tbody><tr><td align="center">模拟</td><td align="center">17</td></tr><tr><td align="center">贪心</td><td align="center">16</td></tr><tr><td align="center">DP</td><td align="center">14</td></tr><tr><td align="center">枚举</td><td align="center">11</td></tr><tr><td align="center">数学</td><td align="center">9</td></tr><tr><td align="center">二分</td><td align="center">8</td></tr><tr><td align="center">数论</td><td align="center">7</td></tr><tr><td align="center">DFS</td><td align="center">5</td></tr><tr><td align="center">前缀和</td><td align="center">5</td></tr><tr><td align="center">推公式</td><td align="center">5</td></tr><tr><td align="center">快速幂</td><td align="center">4</td></tr><tr><td align="center">差分</td><td align="center">4</td></tr><tr><td align="center">双指针</td><td align="center">4</td></tr><tr><td align="center">状态压缩DP</td><td align="center">4</td></tr><tr><td align="center">思维题</td><td align="center">4</td></tr><tr><td align="center">BFS</td><td align="center">3</td></tr><tr><td align="center">树形DP</td><td align="center">3</td></tr><tr><td align="center">递推</td><td align="center">3</td></tr><tr><td align="center">字符串处理</td><td align="center">3</td></tr><tr><td align="center">排序</td><td align="center">2</td></tr><tr><td align="center">搜索</td><td align="center">2</td></tr><tr><td align="center">剪枝</td><td align="center">2</td></tr><tr><td align="center">递归</td><td align="center">2</td></tr><tr><td align="center">动态规划</td><td align="center">2</td></tr><tr><td align="center">分类讨论</td><td align="center">2</td></tr><tr><td align="center">线性DP</td><td align="center">2</td></tr><tr><td align="center">最大公约数</td><td align="center">2</td></tr><tr><td align="center">二叉树</td><td align="center">2</td></tr><tr><td align="center">背包问题</td><td align="center">2</td></tr><tr><td align="center">找规律</td><td align="center">2</td></tr><tr><td align="center">并查集</td><td align="center">2</td></tr><tr><td align="center">哈希表</td><td align="center">2</td></tr><tr><td align="center">分解质因数</td><td align="center">2</td></tr><tr><td align="center">堆</td><td align="center">2</td></tr><tr><td align="center">结论题</td><td align="center">1</td></tr><tr><td align="center">树的直径</td><td align="center">1</td></tr><tr><td align="center">斐波那契数列性质</td><td align="center">1</td></tr><tr><td align="center">龟速乘</td><td align="center">1</td></tr><tr><td align="center">树状数组</td><td align="center">1</td></tr><tr><td align="center">归并排序</td><td align="center">1</td></tr><tr><td align="center">矩阵乘法</td><td align="center">1</td></tr><tr><td align="center">哈希</td><td align="center">1</td></tr><tr><td align="center">区间DP</td><td align="center">1</td></tr><tr><td align="center">辗转相减法</td><td align="center">1</td></tr><tr><td align="center">图论</td><td align="center">1</td></tr><tr><td align="center">环</td><td align="center">1</td></tr><tr><td align="center">置换群</td><td align="center">1</td></tr><tr><td align="center">完全背包问题</td><td align="center">1</td></tr><tr><td align="center">扫描线</td><td align="center">1</td></tr><tr><td align="center">线段树</td><td align="center">1</td></tr><tr><td align="center">Flood Fill</td><td align="center">1</td></tr><tr><td align="center">均值不等式</td><td align="center">1</td></tr><tr><td align="center">滑动窗口</td><td align="center">1</td></tr><tr><td align="center">平衡树</td><td align="center">1</td></tr><tr><td align="center">STL Set</td><td align="center">1</td></tr><tr><td align="center">IDA*</td><td align="center">1</td></tr><tr><td align="center">日期问题</td><td align="center">1</td></tr><tr><td align="center">贡献法</td><td align="center">1</td></tr><tr><td align="center">Bellman-Ford</td><td align="center">1</td></tr><tr><td align="center">SPFA</td><td align="center">1</td></tr><tr><td align="center">Dijkstra</td><td align="center">1</td></tr><tr><td align="center">组合计数</td><td align="center">1</td></tr><tr><td align="center">栈</td><td align="center">1</td></tr><tr><td align="center">括号序列</td><td align="center">1</td></tr><tr><td align="center">博弈论</td><td align="center">1</td></tr><tr><td align="center">构造</td><td align="center">1</td></tr><tr><td align="center">图的遍历</td><td align="center">1</td></tr><tr><td align="center">概率论</td><td align="center">1</td></tr><tr><td align="center">数学期望</td><td align="center">1</td></tr><tr><td align="center">逆元</td><td align="center">1</td></tr><tr><td align="center">快速选择</td><td align="center">1</td></tr><tr><td align="center">链表</td><td align="center">1</td></tr><tr><td align="center">排序不等式</td><td align="center">1</td></tr><tr><td align="center">多路归并</td><td align="center">1</td></tr><tr><td align="center">整数分块</td><td align="center">1</td></tr><tr><td align="center">整除</td><td align="center">1</td></tr><tr><td align="center">单调队列</td><td align="center">1</td></tr><tr><td align="center">欧拉函数</td><td align="center">1</td></tr><tr><td align="center">状态机</td><td align="center">1</td></tr><tr><td align="center">区间合并</td><td align="center">1</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java期末</title>
      <link href="/2023/12/03/java%E6%9C%9F%E6%9C%AB/"/>
      <url>/2023/12/03/java%E6%9C%9F%E6%9C%AB/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/binary-search/">704. 二分查找</a></p><p><strong>7-1 立体图形问题</strong></p><p>分数 30</p><p>全屏浏览题目切换布局</p><p>作者 段喜龙</p><p>单位 南昌航空大学</p><p>编程求得正方体和正三棱锥的表面积和体积，要求必须体现扩展性（继承）和多态性。</p><p>类结构如下图所示（参考）：</p><p><img src="https://images.ptausercontent.com/7f398454-1b66-4a50-933c-b4e902e9080e.png" alt="image.png"><br>试编程完成如上类设计，主方法源码如下（可直接拷贝使用）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="type">double</span> <span class="variable">side</span> <span class="operator">=</span> input.nextDouble();</span><br><span class="line">        </span><br><span class="line">    display(<span class="keyword">new</span> <span class="title class_">Cube</span>(side));</span><br><span class="line">    display(<span class="keyword">new</span> <span class="title class_">RegularPyramid</span>(side));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>display(Solid solid)</code>方法为定义在Main类中的静态方法，作用为体现程序的多态性。</p><p>注：正三棱锥的体积计算公式为底面积*高&#x2F;3。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个实型数，分别作为正方体的边长和正三棱锥的边长。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>分别输出正方体的表面积、体积以及正棱锥的表面积和体积。保留两位小数，建议使用<code>String.format(“%.2f”,value)</code></p><p>进行小数位数控制。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.5</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">37.50</span><br><span class="line">15.63</span><br><span class="line">10.83</span><br><span class="line">1.84</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line">        double side = input.nextDouble();</span><br><span class="line">        display(new Cube(side));</span><br><span class="line">        display(new RegularPyramid(side));</span><br><span class="line">    &#125;</span><br><span class="line">    public static void display(Solid solid)</span><br><span class="line">    &#123;</span><br><span class="line">        solid.getArea();</span><br><span class="line">        solid.getVolume();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public void getArea() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void getVolume() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Cube extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public Cube(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*6;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class RegularPyramid extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public RegularPyramid(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*Math.sqrt(3);</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side*Math.sqrt(2)/12;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>7-2 魔方问题</strong></p><p>分数 40</p><p>全屏浏览题目切换布局</p><p>作者 段喜龙</p><p>单位 南昌航空大学</p><p>问题描述：本问题中的魔方有两种，一种是正方体魔方，一种是正三棱锥魔方，其中，正方体或正三棱锥魔方是由单元正方体或正三棱锥组成，单元正方体或正三棱锥的个数由阶数（即层数）决定，即魔方边长&#x3D;阶数*单元边长。魔方如下图所示：</p><p><img src="https://images.ptausercontent.com/3657a4e0-5b66-4567-ac6c-62731d7c3748.png" alt="image.png"></p><p>利用“立体图形”问题源码，实现如下功能：</p><p>魔方有三个属性：颜色，阶数，类型（正方体魔方、正三棱锥魔方），程序要求输出魔方的颜色、表面积和体积。参考设计类图如下所示：</p><p><img src="https://images.ptausercontent.com/d72c0e02-0001-4e75-bab2-ee639180525f.png" alt="image.png"></p><p>主方法部分可参考如下源码（可拷贝直接使用）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        <span class="type">String</span> <span class="variable">color</span> <span class="operator">=</span> input.next();</span><br><span class="line">        <span class="type">int</span> <span class="variable">layer</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line">        <span class="type">double</span> <span class="variable">side</span> <span class="operator">=</span> input.nextDouble();        </span><br><span class="line">        </span><br><span class="line">        <span class="type">RubikCube</span> <span class="variable">cube1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SquareCube</span>(color, layer,<span class="keyword">new</span> <span class="title class_">Cube</span>(side)); </span><br><span class="line">                </span><br><span class="line">        color = input.next();</span><br><span class="line">        layer = input.nextInt();</span><br><span class="line">        side = input.nextDouble();</span><br><span class="line">        </span><br><span class="line">        <span class="type">RubikCube</span> <span class="variable">cube2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RegularPyramidCube</span>(color, layer,<span class="keyword">new</span> <span class="title class_">RegularPyramid</span>(side));</span><br><span class="line">        display(cube1);</span><br><span class="line">        display(cube2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>display(RubikCube cube)</code>方法为Main类中定义的静态方法，用户输出魔方的信息，用于体现多态性。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>第一部分：正方体魔方颜色、阶数、单元正方体边长，以空格或回车分隔；</p><p>第二部分：正三棱锥魔方颜色、阶数、单元正三棱锥边长，以空格或回车分隔。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>正方体魔方颜色</p><p>正方体魔方表面积</p><p>正方体魔方体积</p><p>正三棱锥魔方颜色</p><p>正三棱锥魔方表面积<br>正三棱锥魔方体积</p><p>注：小数点保留两位</p><h3 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">red 3 4.5</span><br><span class="line">black 4 2.1</span><br></pre></td></tr></table></figure><h3 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">red</span><br><span class="line">1093.50</span><br><span class="line">2460.38</span><br><span class="line">black</span><br><span class="line">122.21</span><br><span class="line">69.85</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String color = input.next();</span><br><span class="line">        int layer = input.nextInt();</span><br><span class="line">        double side = input.nextDouble();</span><br><span class="line"></span><br><span class="line">        RubikCube cube1 = new SquareCube(color, layer,new Cube(side));</span><br><span class="line"></span><br><span class="line">        color = input.next();</span><br><span class="line">        layer = input.nextInt();</span><br><span class="line">        side = input.nextDouble();</span><br><span class="line"></span><br><span class="line">        RubikCube cube2 = new RegularPyramidCube(color, layer,new RegularPyramid(side));</span><br><span class="line">        display(cube1);</span><br><span class="line">        display(cube2);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void display(RubikCube cube)</span><br><span class="line">    &#123;</span><br><span class="line">        cube.getColor();</span><br><span class="line">        cube.getArea();</span><br><span class="line">        cube.getVolume();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public void getArea() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void getVolume() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Cube extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public Cube(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*6;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class RegularPyramid extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public RegularPyramid(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*Math.sqrt(3);</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side*Math.sqrt(2)/12;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    public void getArea() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void getVolume() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void getColor() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class SquareCube extends RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    String color;</span><br><span class="line">    int layer;</span><br><span class="line">    Cube cube;</span><br><span class="line">    public SquareCube(String color, int layer, Cube cube)</span><br><span class="line">    &#123;</span><br><span class="line">        this.color=color;</span><br><span class="line">        this.layer=layer;</span><br><span class="line">        this.cube=cube;</span><br><span class="line">        cube.side=cube.side*layer;</span><br><span class="line">    &#125;</span><br><span class="line">    public void getColor()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line">    public void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        cube.area=cube.side*cube.side*6;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, cube.area));</span><br><span class="line">    &#125;</span><br><span class="line">    public void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        cube.volume=cube.side*cube.side*cube.side;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,cube.volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class RegularPyramidCube extends RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    String color;</span><br><span class="line">    int layer;</span><br><span class="line">    RegularPyramid regularPyramid;</span><br><span class="line">    public RegularPyramidCube(String color, int layer, RegularPyramid regularPyramid)</span><br><span class="line">    &#123;</span><br><span class="line">        this.color=color;</span><br><span class="line">        this.layer=layer;</span><br><span class="line">        this.regularPyramid=regularPyramid;</span><br><span class="line">        regularPyramid.side=regularPyramid.side*layer;</span><br><span class="line">    &#125;</span><br><span class="line">    public void getColor()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line">    public void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        regularPyramid.area=regularPyramid.side*regularPyramid.side*Math.sqrt(3);</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, regularPyramid.area));</span><br><span class="line">    &#125;</span><br><span class="line">    public void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        regularPyramid.volume=regularPyramid.side*regularPyramid.side*regularPyramid.side*Math.sqrt(2)/12;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,regularPyramid.volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-3 魔方排序问题</strong></p><p>分数 30</p><p>全屏浏览题目切换布局</p><p>作者 段喜龙</p><p>单位 南昌航空大学</p><p>在魔方问题的基础上，重构类设计，实现列表内魔方的排序功能（按照魔方的体积进行排序）。</p><p><strong>提示：题目中RubikCube类要实现Comparable接口。</strong></p><p>其中，Main类源码如下（可直接拷贝使用）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        String color;</span><br><span class="line">        <span class="type">int</span> layer;</span><br><span class="line">        <span class="type">double</span> side;</span><br><span class="line">        RubikCube cube;</span><br><span class="line">        </span><br><span class="line">        ArrayList&lt;RubikCube&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">choice</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(choice != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span>(choice) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//SquareCube</span></span><br><span class="line">                color = input.next();</span><br><span class="line">                layer = input.nextInt();</span><br><span class="line">                side = input.nextDouble();</span><br><span class="line">                cube = <span class="keyword">new</span> <span class="title class_">SquareCube</span>(color, layer,<span class="keyword">new</span> <span class="title class_">Cube</span>(side)); </span><br><span class="line">                list.add(cube);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//RegularPyramidCube</span></span><br><span class="line">                color = input.next();</span><br><span class="line">                layer = input.nextInt();</span><br><span class="line">                side = input.nextDouble();</span><br><span class="line">                cube = <span class="keyword">new</span> <span class="title class_">RegularPyramidCube</span>(color, layer,<span class="keyword">new</span> <span class="title class_">RegularPyramid</span>(side)); </span><br><span class="line">                list.add(cube);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            choice = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        list.sort(Comparator.naturalOrder());<span class="comment">//正向排序</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            System.out.print(list.get(i).getColor() + <span class="string">&quot; &quot;</span> + </span><br><span class="line">        String.format(<span class="string">&quot;%.2f&quot;</span>, list.get(i).getArea()) + <span class="string">&quot; &quot;</span> + </span><br><span class="line">        String.format(<span class="string">&quot;%.2f&quot;</span>, list.get(i).getVolume()) );</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;            </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入魔方类型（1：正方体魔方；2：正三棱锥魔方；0：结束输入）</p><p>魔方颜色、魔方阶数、魔方单元正方体、正三棱锥边长</p><p>..循环..</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按魔方体积升序输出列表中各魔方的信息（实型数均保留两位小数），输出样式参见输出样例。</p><h3 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 blue 3 4.5</span><br><span class="line">2 red 4 2.1</span><br><span class="line">1 yellow 5 2.3</span><br><span class="line">2 black 4 9.42</span><br><span class="line">1 white 4 5.4423</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">red 122.21 69.85</span><br><span class="line">yellow 793.50 1520.88</span><br><span class="line">blue 1093.50 2460.38</span><br><span class="line">black 2459.14 6304.73</span><br><span class="line">white 2843.39 10316.38</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner input = new Scanner(System.in);</span><br><span class="line">        String color;</span><br><span class="line">        int layer;</span><br><span class="line">        double side;</span><br><span class="line">        RubikCube cube;</span><br><span class="line">        ArrayList&lt;RubikCube&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        int choice = input.nextInt();</span><br><span class="line">        while(choice != 0)</span><br><span class="line">        &#123;</span><br><span class="line">            switch(choice)</span><br><span class="line">            &#123;</span><br><span class="line">                case 1://SquareCube</span><br><span class="line">                    color = input.next();</span><br><span class="line">                    layer = input.nextInt();</span><br><span class="line">                    side = input.nextDouble();</span><br><span class="line">                    cube = new SquareCube(color, layer,new Cube(side));</span><br><span class="line">                    list.add(cube);</span><br><span class="line">                    break;</span><br><span class="line">                case 2://RegularPyramidCube</span><br><span class="line">                    color = input.next();</span><br><span class="line">                    layer = input.nextInt();</span><br><span class="line">                    side = input.nextDouble();</span><br><span class="line">                    cube = new RegularPyramidCube(color, layer,new RegularPyramid(side));</span><br><span class="line">                    list.add(cube);</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">            choice = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Collections.sort(list, Comparator.comparing(RubikCube::getVolume));</span><br><span class="line"></span><br><span class="line">        for(int i = 0; i &lt; list.size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(list.get(i).getColor() + &quot; &quot; +</span><br><span class="line">                    String.format(&quot;%.2f&quot;, list.get(i).getArea()) + &quot; &quot; +</span><br><span class="line">                    String.format(&quot;%.2f&quot;, list.get(i).getVolume()) );</span><br><span class="line">            System.out.println(&quot;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public void getArea() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void getVolume() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Cube extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public Cube(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*6;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class RegularPyramid extends Solid</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    double side;</span><br><span class="line">    double area;</span><br><span class="line">    double volume;</span><br><span class="line">    public RegularPyramid(double side)</span><br><span class="line">    &#123;</span><br><span class="line">        this.side=side;</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        area=side*side*Math.sqrt(3);</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;, area));</span><br><span class="line">    &#125;</span><br><span class="line">    public  void getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        volume=side*side*side*Math.sqrt(2)/12;</span><br><span class="line">        System.out.println(String.format(&quot;%.2f&quot;,volume));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    public String getColor() &#123;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public double getArea() &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public double getVolume() &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class SquareCube extends RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    String color;</span><br><span class="line">    int layer;</span><br><span class="line">    Cube cube;</span><br><span class="line">    public SquareCube(String color, int layer, Cube cube)</span><br><span class="line">    &#123;</span><br><span class="line">        this.color=color;</span><br><span class="line">        this.layer=layer;</span><br><span class="line">        this.cube=cube;</span><br><span class="line">        cube.side=cube.side*layer;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getColor()</span><br><span class="line">    &#123;</span><br><span class="line">        return color;</span><br><span class="line">    &#125;</span><br><span class="line">    public double getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        cube.area=cube.side*cube.side*6;</span><br><span class="line">        return cube.area;</span><br><span class="line">    &#125;</span><br><span class="line">    public double getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        cube.volume=cube.side*cube.side*cube.side;</span><br><span class="line">        return cube.volume;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class RegularPyramidCube extends RubikCube</span><br><span class="line">&#123;</span><br><span class="line">    String color;</span><br><span class="line">    int layer;</span><br><span class="line">    RegularPyramid regularPyramid;</span><br><span class="line">    public RegularPyramidCube(String color, int layer, RegularPyramid regularPyramid)</span><br><span class="line">    &#123;</span><br><span class="line">        this.color=color;</span><br><span class="line">        this.layer=layer;</span><br><span class="line">        this.regularPyramid=regularPyramid;</span><br><span class="line">        regularPyramid.side=regularPyramid.side*layer;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getColor()</span><br><span class="line">    &#123;</span><br><span class="line">        return color;</span><br><span class="line">    &#125;</span><br><span class="line">    public double getArea()</span><br><span class="line">    &#123;</span><br><span class="line">        regularPyramid.area=regularPyramid.side*regularPyramid.side*Math.sqrt(3);</span><br><span class="line">        return regularPyramid.area;</span><br><span class="line">    &#125;</span><br><span class="line">    public double getVolume()</span><br><span class="line">    &#123;</span><br><span class="line">        regularPyramid.volume=regularPyramid.side*regularPyramid.side*regularPyramid.side*Math.sqrt(2)/12;</span><br><span class="line">        return regularPyramid.volume;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-4 销售步枪问题（附加题）</strong></p><p>分数 20</p><p>全屏浏览题目切换布局</p><p>作者 段喜龙</p><p>单位 南昌航空大学</p><p>前亚利桑那州境内的一位步枪销售商销售密苏里州制造的步枪机（lock）、枪托（stock）和枪管（barrel）。枪机卖45美元，枪托卖30美元，枪管卖25美元。销售商每月至少要售出一支完整的步枪，且生产限额是销售商在一个月内可销售70个枪机、80个枪托和90个枪管。</p><p>根据每个月的销售情况，计算销售商的佣金（提成）算法如下：</p><ul><li>不到（含）1000美元的部分为10%；</li><li>1000（含）~1800美元的部分为15%；</li><li>超过1800美元的部分为20%。</li></ul><p>佣金程序生成月份销售报告，汇总销售商的销售总额和佣金。</p><p>编程要求：必须符合面向对象编程，且保证类设计的单一职责模式，使用面向过程编程判定0分。</p><p>提示：可以设置一个销售订单类。参考类图如下：</p><p><img src="https://images.ptausercontent.com/99407ef9-a430-480a-9970-a1a6919639de.png" alt="image.png"></p><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入销售商每个月售出枪机、枪托、枪管的数量，可以用空格或者回车分隔。</p><h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>分别输出销售商在该月的销售额和佣金，中间用空格分开。</p><h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 40 50</span><br></pre></td></tr></table></figure><h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3800.00 620.00</span><br></pre></td></tr></table></figure><p>输入样例2:<br>在这里给出一组输入。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">88 56 98</span><br></pre></td></tr></table></figure><p>输出样例2:<br>在这里给出相应的输出。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wrong Format</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">public class Main</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner scan=new Scanner(System.in);</span><br><span class="line">        int a=scan.nextInt();</span><br><span class="line">        int b=scan.nextInt();</span><br><span class="line">        int c=scan.nextInt();</span><br><span class="line">        Salesorder s=new Salesorder(a,b,c);</span><br><span class="line">        if(a&lt;=70&amp;&amp;b&lt;=80&amp;&amp;c&lt;=90&amp;&amp;a&gt;=1&amp;&amp;b&gt;=1&amp;&amp;c&gt;=1)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(String.format(&quot;%.2f %.2f&quot;, s.getFene( s),s.getYongjin(s)));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;Wrong Format&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Salesorder</span><br><span class="line">&#123;</span><br><span class="line">    int a;</span><br><span class="line">    int b;</span><br><span class="line">    int c;</span><br><span class="line">    double fene;</span><br><span class="line"></span><br><span class="line">    Salesorder(int a,int b,int c)</span><br><span class="line">    &#123;</span><br><span class="line">        this.a=a;</span><br><span class="line">        this.b=b;</span><br><span class="line">        this.c=c;</span><br><span class="line">    &#125;</span><br><span class="line">    double getFene(Salesorder salesorder)</span><br><span class="line">    &#123;</span><br><span class="line">        fene=salesorder.a*45+salesorder.b*30+salesorder.c*25;</span><br><span class="line">        return fene;</span><br><span class="line">    &#125;</span><br><span class="line">    double getYongjin(Salesorder salesorder)</span><br><span class="line">    &#123;</span><br><span class="line">        fene=salesorder.a*45+salesorder.b*30+salesorder.c*25;</span><br><span class="line">        if(fene&lt;=1000)</span><br><span class="line">        &#123;</span><br><span class="line">            return fene*0.1;</span><br><span class="line">        &#125;</span><br><span class="line">        if(fene&gt;1000&amp;&amp;fene&lt;=1800)</span><br><span class="line">        &#123;</span><br><span class="line">            return 100+(fene-1000)*0.15;</span><br><span class="line">        &#125;</span><br><span class="line">        if(fene&gt;1800)</span><br><span class="line">        &#123;</span><br><span class="line">            return 100+120+(fene-1800)*0.2;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Barrel</span><br><span class="line">&#123;</span><br><span class="line">        int c;</span><br><span class="line">        Barrel(int c)</span><br><span class="line">        &#123;</span><br><span class="line">            this.c=c;</span><br><span class="line">        &#125;</span><br><span class="line">        int getPrice()</span><br><span class="line">        &#123;</span><br><span class="line">            return c*25;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Stock</span><br><span class="line">&#123;</span><br><span class="line">        int b;</span><br><span class="line">        Stock(int b)</span><br><span class="line">        &#123;</span><br><span class="line">            this.b=b;</span><br><span class="line">        &#125;</span><br><span class="line">        int getPrice()</span><br><span class="line">        &#123;</span><br><span class="line">            return b*30;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Lock</span><br><span class="line">&#123;</span><br><span class="line">        int a;</span><br><span class="line">        Lock(int a)</span><br><span class="line">        &#123;</span><br><span class="line">            this.a=a;</span><br><span class="line">        &#125;</span><br><span class="line">        int getPrice()</span><br><span class="line">        &#123;</span><br><span class="line">            return a*45;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 为学姐打call！！！ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>顺序表</title>
      <link href="/2023/10/12/%E9%A1%BA%E5%BA%8F%E8%A1%A8/"/>
      <url>/2023/10/12/%E9%A1%BA%E5%BA%8F%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#define initSize 20</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">    int *data;</span><br><span class="line">    int length;</span><br><span class="line">    int listSize;</span><br><span class="line">&#125;sqList;</span><br><span class="line">void initList(sqList *l) &#123;//初始化顺序表</span><br><span class="line">    l -&gt; data = (int *) malloc(sizeof (int) * initSize);</span><br><span class="line">    l -&gt; length = 0;</span><br><span class="line">    l -&gt; listSize = initSize;</span><br><span class="line">&#125;</span><br><span class="line">void createList(sqList *l) &#123;//创建顺序表</span><br><span class="line">    int x;</span><br><span class="line">    printf(&quot;请输入顺序表元素：\n&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;x);</span><br><span class="line">    while(x != 0)</span><br><span class="line">    &#123;</span><br><span class="line">            l -&gt; data[l -&gt; length ++] = x;//这里第一次用循环赋值不对</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void insertList(sqList *l,int i,int e) &#123;//在顺序表l中第i个位置前插入新元素e</span><br><span class="line">    for(int j = l -&gt; length;j &gt;= i;j --) &#123;</span><br><span class="line">        l -&gt; data[j] = l -&gt; data[j - 1];</span><br><span class="line">    &#125;</span><br><span class="line">    l -&gt; data[i - 1] = e;</span><br><span class="line">    l -&gt; length ++;</span><br><span class="line">&#125;</span><br><span class="line">void delList(sqList *l,int i) &#123;//删除线性表中第i个元素</span><br><span class="line">    for(int j = i;j &lt;= l -&gt; length;j ++) &#123;</span><br><span class="line">        l -&gt; data[j - 1] = l -&gt; data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    l -&gt; length --;</span><br><span class="line">&#125;</span><br><span class="line">void printList(sqList *l) &#123;</span><br><span class="line">    printf(&quot;链表输出如下：\n&quot;);</span><br><span class="line">    for (int i = 0;i &lt; l -&gt; length;i ++) &#123;</span><br><span class="line">        printf(&quot;%d &quot;,l -&gt; data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">void connetList(sqList *la,sqList *lb,sqList *lc) &#123;</span><br><span class="line">    int i =0 ,j = 0,k = 0;</span><br><span class="line">    int size = la -&gt; length + lb -&gt; length;</span><br><span class="line">    lc -&gt; data = (int *) malloc(sizeof (int) * size);</span><br><span class="line">    while(i &lt; la -&gt; length &amp;&amp;j &lt; lb -&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        if(la -&gt; data[i] &lt; lb -&gt; data[j]) &#123;</span><br><span class="line">            lc -&gt; data[k ++] = la -&gt; data[i ++];</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            lc -&gt; data[k ++] = lb -&gt; data[j ++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    while(i &lt; la -&gt; length)</span><br><span class="line">    &#123;</span><br><span class="line">        lc -&gt; data[k ++] = la -&gt; data[i ++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    while(j &lt; lb -&gt; length)</span><br><span class="line">    &#123;</span><br><span class="line">        lc -&gt; data[k ++] = lb -&gt; data[j ++];</span><br><span class="line">    &#125;</span><br><span class="line">    lc -&gt; length = k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int choice;</span><br><span class="line">    printf(&quot;输入你的选项：1/2\n&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;choice);</span><br><span class="line">    if(choice == 1) &#123;</span><br><span class="line">        sqList l;</span><br><span class="line">        initList(&amp;l);</span><br><span class="line">        createList(&amp;l);</span><br><span class="line">        printList(&amp;l);</span><br><span class="line">        insertList(&amp;l,2,0);</span><br><span class="line">        printList(&amp;l);</span><br><span class="line">        delList(&amp;l,2);</span><br><span class="line">        printList(&amp;l);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        sqList la,lb,lc;</span><br><span class="line">        initList(&amp;la);</span><br><span class="line">        createList(&amp;la);</span><br><span class="line">        printList(&amp;la);</span><br><span class="line">        initList(&amp;lb);</span><br><span class="line">        createList(&amp;lb);</span><br><span class="line">        connetList(&amp;la,&amp;lb,&amp;lc);</span><br><span class="line">        printList(&amp;lc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 顺序表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希表</title>
      <link href="/2023/08/10/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
      <url>/2023/08/10/%E5%93%88%E5%B8%8C%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/valid-anagram/">242. 有效的字母异位词</a></p><p>给定两个字符串s和t，编写一个函数来判断s是否是t的字母异位词。</p><p><strong>注意：</strong>若s和t中每个字符出现的次数都相同，则称s和t互为字母异位词。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;anagram&quot;, t = &quot;nagaram&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;rat&quot;, t = &quot;car&quot;</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">isAnagram</span><span class="params">(<span class="type">char</span>* s, <span class="type">char</span>* t)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;;<span class="comment">//不是&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(s);i ++) &#123;</span><br><span class="line">        a[s[i] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(t);j ++) &#123;</span><br><span class="line">        a[t[j] - <span class="string">&#x27;a&#x27;</span>] --;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; <span class="number">26</span>; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[k] != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/ransom-note/">383. 赎金信</a></p><p>给你两个字符串：ransomNote 和 magazine，判断ransomNote 能不能由 magazine里面的字符构成。</p><p>如果可以，返回 true；否则返回 false。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magazine`中的每个字符只能在ransomNote中使用一次。</span><br></pre></td></tr></table></figure><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：ransomNote = &quot;a&quot;, magazine = &quot;b&quot;</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：ransomNote = &quot;aa&quot;, magazine = &quot;ab&quot;</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：ransomNote = &quot;aa&quot;, magazine = &quot;aab&quot;</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">canConstruct</span><span class="params">(<span class="type">char</span> * ransomNote, <span class="type">char</span> * magazine)</span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="built_in">strlen</span>(magazine);i ++) &#123;</span><br><span class="line">        a[magazine[i] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="built_in">strlen</span>(ransomNote);j ++) &#123;</span><br><span class="line">        a[ransomNote[j] - <span class="string">&#x27;a&#x27;</span>] --;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">26</span>;i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/find-all-anagrams-in-a-string/">438. 找到字符串中所有字母异位词</a></p><p>中等</p><p>1.2K</p><p>相关企业</p><p>给定两个字符串 <code>s</code> 和 <code>p</code>，找到 <code>s</code> 中所有 <code>p</code> 的 <strong>异位词</strong> 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。</p><p><strong>异位词</strong> 指由相同字母重排列形成的字符串（包括相同的字符串）。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;cbaebabacd&quot;, p = &quot;abc&quot;</span><br><span class="line">输出: [0,6]</span><br><span class="line">解释:</span><br><span class="line">起始索引等于 0 的子串是 &quot;cba&quot;, 它是 &quot;abc&quot; 的异位词。</span><br><span class="line">起始索引等于 6 的子串是 &quot;bac&quot;, 它是 &quot;abc&quot; 的异位词。</span><br></pre></td></tr></table></figure><p> <strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;abab&quot;, p = &quot;ab&quot;</span><br><span class="line">输出: [0,1,2]</span><br><span class="line">解释:</span><br><span class="line">起始索引等于 0 的子串是 &quot;ab&quot;, 它是 &quot;ab&quot; 的异位词。</span><br><span class="line">起始索引等于 1 的子串是 &quot;ba&quot;, 它是 &quot;ab&quot; 的异位词。</span><br><span class="line">起始索引等于 2 的子串是 &quot;ab&quot;, 它是 &quot;ab&quot; 的异位词。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note: The returned array must be malloced, assume caller calls free().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">findAnagrams</span><span class="params">(<span class="type">char</span> * s, <span class="type">char</span> * p, <span class="type">int</span>* returnSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span>* result = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(s) * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    *returnSize = <span class="number">0</span>;<span class="comment">//必须要写</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(s) &lt; <span class="built_in">strlen</span>(p))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">26</span>] = &#123;<span class="number">0</span>&#125;; </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(p);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len1;i ++) &#123;</span><br><span class="line">        a[p[i] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>;k &lt; len1;k ++) &#123;</span><br><span class="line">        b[s[k] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l =<span class="number">0</span>;l &lt; <span class="number">26</span>;l ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[l] != b[l]) &#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            result[*returnSize] = <span class="number">0</span>;</span><br><span class="line">            (*returnSize) ++;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; len2 - len1;j ++) &#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        b[s[j] - <span class="string">&#x27;a&#x27;</span>] --;</span><br><span class="line">        b[s[j + len1] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> l =<span class="number">0</span>;l &lt; <span class="number">26</span>;l ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[l] != b[l]) &#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            result[*returnSize] = j + <span class="number">1</span>;</span><br><span class="line">            (*returnSize) ++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></p><p>给定两个数组 <code>nums1</code> 和 <code>nums2</code> ，返回 <em>它们的交集</em> 。输出结果中的每个元素一定是 <strong>唯一</strong> 的。我们可以 <strong>不考虑输出结果的顺序</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [1,2,2,1], nums2 = [2,2]</span><br><span class="line">输出：[2]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]</span><br><span class="line">输出：[9,4]</span><br><span class="line">解释：[4,9] 也是可通过的</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">intersection</span><span class="params">(<span class="type">int</span>* nums1, <span class="type">int</span> nums1Size, <span class="type">int</span>* nums2, <span class="type">int</span> nums2Size, <span class="type">int</span>* returnSize)</span> &#123;</span><br><span class="line">    <span class="type">int</span>* result = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">1005</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="type">int</span> hash[<span class="number">1005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    *returnSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums1Size; i++) &#123;</span><br><span class="line">        hash[nums1[i]] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; nums2Size; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(hash[nums2[j]] == <span class="number">1</span>&amp;&amp;hash[nums2[j]] != <span class="number">-1</span>) &#123;</span><br><span class="line">           result[(*returnSize)++] = nums2[j]; </span><br><span class="line">           hash[nums2[j]] = <span class="number">-1</span>;<span class="comment">//去除重复元素</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/happy-number/">202. 快乐数</a></p><p>编写一个算法来判断一个数 <code>n</code> 是不是快乐数。</p><p><strong>「快乐数」</strong> 定义为：</p><ul><li>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。</li><li>然后重复这个过程直到这个数变为 1，也可能是 <strong>无限循环</strong> 但始终变不到 1。</li><li>如果这个过程 <strong>结果为</strong> 1，那么这个数就是快乐数。</li></ul><p>如果 <code>n</code> 是 <em>快乐数</em> 就返回 <code>true</code> ；不是，则返回 <code>false</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 19</span><br><span class="line">输出：true</span><br><span class="line">解释：</span><br><span class="line">12 + 92 = 82</span><br><span class="line">82 + 22 = 68</span><br><span class="line">62 + 82 = 100</span><br><span class="line">12 + 02 + 02 = 1</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 2</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (n % <span class="number">10</span>) * (n % <span class="number">10</span>);</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">isHappy</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> hash[<span class="number">1005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="type">int</span> sum = getSum(n);        </span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (hash[sum] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//重新出现就不是了</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            hash[sum] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n = sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="/2023/08/04/%E9%93%BE%E8%A1%A8/"/>
      <url>/2023/08/04/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/remove-linked-list-elements/">203. 移除链表元素</a></p><p>给你一个链表的头节点 和一个整数 ，请你删除链表中所有满足 的节点，并返回 <strong>新的头节点</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,6,3,4,5,6], val = 6</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [], val = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [7,7,7,7], val = 7</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     struct ListNode *next;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode* <span class="title function_">removeElements</span><span class="params">(<span class="keyword">struct</span> ListNode* head, <span class="type">int</span> val)</span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">    <span class="keyword">while</span>(head &amp;&amp; head-&gt;val == val) &#123;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(temp &amp;&amp; temp-&gt;next) &#123;</span><br><span class="line">        <span class="keyword">if</span>(temp-&gt;next-&gt;val == val) &#123;</span><br><span class="line">            temp-&gt;next = temp-&gt;next-&gt;next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/design-linked-list/">707. 设计链表</a></p><p>你可以选择使用单链表或者双链表，设计并实现自己的链表。</p><p>单链表中的节点应该具备两个属性： 和 。是当前节点的值， 是指向下一个节点的指针&#x2F;引用。<code>val``next``val``next</code></p><p>如果是双向链表，则还需要属性 以指示链表中的上一个节点。假设链表中的所有节点下标从 <strong>0</strong> 开始。<code>prev</code></p><p>实现 类：<code>MyLinkedList</code></p><ul><li><code>MyLinkedList()</code>初始化 对象。<code>MyLinkedList</code></li><li><code>int get(int index)</code>获取链表中下标为 的节点的值。如果下标无效，则返回 。<code>index``-1</code></li><li><code>void addAtHead(int val)</code>将一个值为 的节点插入到链表中第一个元素之前。在插入完成后，新节点会成为链表的第一个节点。<code>val</code></li><li><code>void addAtTail(int val)</code>将一个值为 的节点追加到链表中作为链表的最后一个元素。<code>val</code></li><li><code>void addAtIndex(int index, int val)</code>将一个值为 的节点插入到链表中下标为 的节点之前。如果 等于链表的长度，那么该节点会被追加到链表的末尾。如果 比长度更大，该节点将 <strong>不会插入</strong> 到链表中。<code>val``index``index``index</code></li><li><code>void deleteAtIndex(int index)</code>如果下标有效，则删除链表中下标为 的节点。<code>index</code></li></ul><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输入</span><br><span class="line">[&quot;MyLinkedList&quot;, &quot;addAtHead&quot;, &quot;addAtTail&quot;, &quot;addAtIndex&quot;, &quot;get&quot;, &quot;deleteAtIndex&quot;, &quot;get&quot;]</span><br><span class="line">[[], [1], [3], [1, 2], [1], [1], [1]]</span><br><span class="line">输出</span><br><span class="line">[null, null, null, null, 2, null, 3]</span><br><span class="line"></span><br><span class="line">解释</span><br><span class="line">MyLinkedList myLinkedList = new MyLinkedList();</span><br><span class="line">myLinkedList.addAtHead(1);</span><br><span class="line">myLinkedList.addAtTail(3);</span><br><span class="line">myLinkedList.addAtIndex(1, 2);    // 链表变为 1-&gt;2-&gt;3</span><br><span class="line">myLinkedList.get(1);              // 返回 2</span><br><span class="line">myLinkedList.deleteAtIndex(1);    // 现在，链表变为 1-&gt;3</span><br><span class="line">myLinkedList.get(1);              // 返回 3</span><br></pre></td></tr></table></figure><p>下面函数其实对index的定义有所不同，可以不用深究</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">MyLinkedList</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">MyLinkedList</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; MyLinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 在这里初始化你的数据结构。 */</span></span><br><span class="line">MyLinkedList* <span class="title function_">myLinkedListCreate</span><span class="params">()</span> &#123;</span><br><span class="line">    MyLinkedList* head = (MyLinkedList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(MyLinkedList));</span><br><span class="line">    head -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//只有一个节点</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 获取链表中第 index 个节点的值。如果索引无效，则返回 -1。 */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">myLinkedListGet</span><span class="params">(MyLinkedList* obj, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">    MyLinkedList* temp = obj -&gt; next;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;temp != <span class="literal">NULL</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == index) &#123;</span><br><span class="line">            <span class="keyword">return</span> temp -&gt; val;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            temp = temp -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 将一个值为 val 的节点添加到链表的第一个元素之前。插入后，新节点将成为链表的第一个节点。 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">myLinkedListAddAtHead</span><span class="params">(MyLinkedList* obj, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">MyLinkedList</span>* <span class="title">newhead</span> =</span> (MyLinkedList* )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(MyLinkedList));</span><br><span class="line">    newhead -&gt; val = val;</span><br><span class="line">    <span class="comment">//newhead -&gt; next = obj;这样写的话头节点就变了</span></span><br><span class="line">    newhead -&gt; next = obj -&gt; next;</span><br><span class="line">    obj -&gt; next = newhead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 将一个值为 val 的节点追加到链表的最后一个元素。 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">myLinkedListAddAtTail</span><span class="params">(MyLinkedList* obj, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    MyLinkedList *temp = obj;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">MyLinkedList</span>* <span class="title">lastnode</span> =</span> (MyLinkedList* )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(MyLinkedList));</span><br><span class="line">    lastnode -&gt; val = val;</span><br><span class="line">    lastnode -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(obj -&gt; next)</span><br><span class="line">    &#123;</span><br><span class="line">        obj = obj -&gt; next;</span><br><span class="line">    &#125;</span><br><span class="line">    obj -&gt; next = lastnode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 在链表的第 index 个节点之后添加一个值为 val 的节点。如果 index 等于链表的长度，</span></span><br><span class="line"><span class="comment">则该节点将被追加到链表的末尾。如果 index 大于链表的长度，则不会插入节点。 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">myLinkedListAddAtIndex</span><span class="params">(MyLinkedList* obj, <span class="type">int</span> index, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">     <span class="keyword">if</span> (index == <span class="number">0</span>)&#123;</span><br><span class="line">        myLinkedListAddAtHead(obj, val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    MyLinkedList *temp = obj -&gt; next;<span class="comment">//</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">MyLinkedList</span>* <span class="title">newnode</span> =</span> (MyLinkedList* )<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(MyLinkedList));</span><br><span class="line">    newnode -&gt; val = val;</span><br><span class="line">    newnode -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;temp != <span class="literal">NULL</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == index) &#123;</span><br><span class="line">            newnode -&gt; next = temp -&gt; next;</span><br><span class="line">            temp -&gt; next = newnode;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            temp = temp -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 删除链表中第 index 个节点（如果索引有效）。 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">myLinkedListDeleteAtIndex</span><span class="params">(MyLinkedList* obj, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || obj-&gt;next == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    MyLinkedList *temp = obj;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; temp != <span class="literal">NULL</span> &amp;&amp; i &lt; index; i++) &#123;</span><br><span class="line">        temp = temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (temp != <span class="literal">NULL</span> &amp;&amp; temp-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        temp-&gt;next = temp-&gt;next-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** 释放链表的内存空间。 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">myLinkedListFree</span><span class="params">(MyLinkedList* obj)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span>(obj != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        MyLinkedList *tmp = obj;</span><br><span class="line">        obj = obj-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/reverse-linked-list/">206. 反转链表</a></p><p>给你单链表的头节点 ，请你反转链表，并返回反转后的链表。<code>head</code></p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2,3,4,5]</span><br><span class="line">输出：[5,4,3,2,1]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = [1,2]</span><br><span class="line">输出：[2,1]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> ListNode* <span class="title function_">reverseList</span><span class="params">(<span class="keyword">struct</span> ListNode* head)</span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">prev</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">curr</span> =</span> head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (curr != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">nextTemp</span> =</span> curr -&gt; next;</span><br><span class="line">        curr -&gt; next = prev;</span><br><span class="line">        prev = curr;</span><br><span class="line">        curr = nextTemp;<span class="comment">//不能用curr = curr -&gt; next</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> prev;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针</title>
      <link href="/2023/08/02/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
      <url>/2023/08/02/%E5%8F%8C%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/remove-element/">27. 移除元素</a></p><p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地</a></strong> 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 <code>O(1)</code> 额外空间并 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地 </a>修改输入数组</strong>。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p><strong>说明:</strong></p><p>为什么返回数值是整数，但输出的答案是数组呢?</p><p>请注意，输入数组是以<strong>「引用」</strong>方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p><p>你可以想象内部操作如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝</span><br><span class="line">int len = removeElement(nums, val);</span><br><span class="line"></span><br><span class="line">// 在函数里修改输入数组对于调用者是可见的。</span><br><span class="line">// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。</span><br><span class="line">for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">    print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,2,3], val = 3</span><br><span class="line">输出：2, nums = [2,2]</span><br><span class="line">解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1,2,2,3,0,4,2], val = 2</span><br><span class="line">输出：5, nums = [0,1,4,0,3]</span><br><span class="line">解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="type">int</span> slow = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> fast = <span class="number">0</span>;fast &lt; numsSize;fast ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fast] != val) &#123;</span><br><span class="line">                nums[slow++] = nums[fast];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/">26. 删除有序数组中的重复项</a></p><p>给你一个 <strong>升序排列</strong> 的数组 <code>nums</code> ，请你**<a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地</a>** 删除重复出现的元素，使每个元素 <strong>只出现一次</strong> ，返回删除后数组的新长度。元素的 <strong>相对顺序</strong> 应该保持 <strong>一致</strong> 。然后返回 <code>nums</code> 中唯一元素的个数。</p><p>考虑 <code>nums</code> 的唯一元素的数量为 <code>k</code> ，你需要做以下事情确保你的题解可以被通过：</p><ul><li>更改数组 <code>nums</code> ，使 <code>nums</code> 的前 <code>k</code> 个元素包含唯一元素，并按照它们最初在 <code>nums</code> 中出现的顺序排列。<code>nums</code> 的其余元素与 <code>nums</code> 的大小不重要。</li><li>返回 <code>k</code> 。</li></ul><p><strong>判题标准:</strong></p><p>系统会用下面的代码来测试你的题解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int[] nums = [...]; // 输入数组</span><br><span class="line">int[] expectedNums = [...]; // 长度正确的期望答案</span><br><span class="line"></span><br><span class="line">int k = removeDuplicates(nums); // 调用</span><br><span class="line"></span><br><span class="line">assert k == expectedNums.length;</span><br><span class="line">for (int i = 0; i &lt; k; i++) &#123;</span><br><span class="line">    assert nums[i] == expectedNums[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果所有断言都通过，那么您的题解将被 <strong>通过</strong>。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [1,1,2]</span><br><span class="line">输出：2, nums = [1,2,_]</span><br><span class="line">解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,0,1,1,1,2,2,3,3,4]</span><br><span class="line">输出：5, nums = [0,1,2,3,4]</span><br><span class="line">解释：函数应该返回新的长度 5 ， 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4 。不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">removeDuplicates</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> slow = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> fast = <span class="number">1</span>;fast &lt; numsSize;fast ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fast] != nums[fast<span class="number">-1</span>]) &#123;</span><br><span class="line">                nums[++slow] = nums[fast];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/move-zeroes/">283. 移动零</a></p><p>给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p><p><strong>请注意</strong> ，必须在不复制数组的情况下原地对数组进行操作。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0,1,0,3,12]</span><br><span class="line">输出: [1,3,12,0,0]</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [0]</span><br><span class="line">输出: [0]</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> slow = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> fast = <span class="number">0</span>;fast &lt; numsSize;fast ++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fast] != <span class="number">0</span>) &#123;</span><br><span class="line">                nums[slow++] = nums[fast];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(slow;slow&lt;numsSize;slow++) &#123;</span><br><span class="line">        nums[slow] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/2023/07/27/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
      <url>/2023/07/27/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/binary-search/">704. 二分查找</a></p><p>给定一个 <code>n</code> 个元素有序的（升序）整型数组 <code>nums</code> 和一个目标值 <code>target</code> ，写一个函数搜索 <code>nums</code> 中的 <code>target</code>，如果目标值存在返回下标，否则返回 <code>-1</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 9</span><br><span class="line">输出: 4</span><br><span class="line">解释: 9 出现在 nums 中并且下标为 4</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 2</span><br><span class="line">输出: -1</span><br><span class="line">解释: 2 不存在 nums 中因此返回 -1</span><br></pre></td></tr></table></figure><p>二分查找有两种写法，分别是while (left &lt;&#x3D; right)和while (left &lt; right)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target)</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = numsSize - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> middle = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[middle] &gt; target) &#123;</span><br><span class="line">            right = middle - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(nums[middle] &lt; target) &#123;</span><br><span class="line">            left = middle + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> middle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target)</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = numsSize;</span><br><span class="line">    <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> middle = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[middle] &gt; target) &#123;</span><br><span class="line">            right = middle;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(nums[middle] &lt; target) &#123;</span><br><span class="line">            left = middle+<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> middle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/search-insert-position/">35. 搜索插入位置</a></p><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p><p><strong>示例 1:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [1,3,5,6], target = 7</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target)</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = numsSize - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> middle = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[middle] &gt; target) &#123;</span><br><span class="line">            right = middle - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(nums[middle] &lt; target) &#123;</span><br><span class="line">            left = middle + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> middle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> right + <span class="number">1</span>;<span class="comment">//right的值会不断修改,保证边界不会出现问题</span></span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/sqrtx/">69. x 的平方根</a></p><p>给你一个非负整数 <code>x</code> ，计算并返回 <code>x</code> 的 <strong>算术平方根</strong> 。</p><p>由于返回类型是整数，结果只保留 <strong>整数部分</strong> ，小数部分将被 <strong>舍去 。</strong></p><p><strong>注意：</strong>不允许使用任何内置指数函数和算符，例如 <code>pow(x, 0.5)</code> 或者 <code>x ** 0.5</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 4</span><br><span class="line">输出：2</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 8</span><br><span class="line">输出：2</span><br><span class="line">解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> right = x;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> middle = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>((<span class="type">long</span>)middle * middle&gt; x) &#123;</span><br><span class="line">            right = middle - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">long</span>)middle * middle &lt; x) &#123;</span><br><span class="line">            left = middle + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> middle;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> left - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>(long)middle * middle</code> 和 <code>(long)(middle * middle)</code> 是两种不同的方式来处理乘法操作和类型转换。</p><ol><li><code>(long)middle * middle</code>: 这种写法先将 <code>middle</code> 转换为 <code>long</code> 类型，然后执行乘法操作。这样做可以确保乘法操作的结果不会溢出，并且结果也是 <code>long</code> 类型。(long * int &#x3D; long)</li><li><code>(long)(middle * middle)</code>: 这种写法先执行乘法操作，然后再将结果转换为 <code>long</code> 类型。在这种情况下，乘法操作仍然使用 <code>int</code> 类型进行计算，可能导致整数溢出问题。然后，将溢出的结果转换为 <code>long</code> 类型。</li></ol><p><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></p><p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-4,-1,0,3,10]</span><br><span class="line">输出：[0,1,9,16,100]</span><br><span class="line">解释：平方后，数组变为 [16,1,0,9,100]</span><br><span class="line">排序后，数组变为 [0,1,9,16,100]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-7,-3,2,3,11]</span><br><span class="line">输出：[4,9,9,49,121]</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">sortedSquares</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span>* returnSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = numsSize - <span class="number">1</span>;</span><br><span class="line">    *returnSize = numsSize;</span><br><span class="line">    <span class="type">int</span> *ans = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*numsSize);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = numsSize - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i --) &#123;</span><br><span class="line">        <span class="type">int</span> numsleft = nums[left] * nums[left];</span><br><span class="line">        <span class="type">int</span> numsright = nums[right] * nums[right];</span><br><span class="line">        <span class="keyword">if</span>(numsleft &gt; numsright) &#123;</span><br><span class="line">            ans[i] = numsleft;</span><br><span class="line">            left ++;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ans[i] = numsright;</span><br><span class="line">            right --;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//最大值肯定在两端，所以从两端开始比较，大的放到数组末尾</span></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></p><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code> <strong>。</strong></p><p>找出该数组中满足其和 <code>≥ target</code> 的长度最小的 <strong>连续子数组</strong> <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> ，并返回其长度<strong>。</strong>如果不存在符合条件的子数组，返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 7, nums = [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 4, nums = [1,4,4]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 11, nums = [1,1,1,1,1,1,1,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> thisSum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> minlength = INT_MAX;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>,right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;right &lt; numsSize;right ++) &#123;<span class="comment">//右边界向右拓展</span></span><br><span class="line">        thisSum += nums[right];</span><br><span class="line">        <span class="keyword">while</span>(thisSum &gt;= target) &#123;</span><br><span class="line">            <span class="type">int</span> lengh = right - left + <span class="number">1</span>;</span><br><span class="line">            thisSum -= nums[left++];<span class="comment">//左边界不断收缩</span></span><br><span class="line">            <span class="keyword">if</span>(lengh &lt; minlength) &#123; </span><br><span class="line">                minlength = lengh;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minlength == INT_MAX ? <span class="number">0</span> :minlength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2023/07/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/07/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/06/hello-world/"/>
      <url>/2023/07/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
